{"version":3,"sources":["webpack://sr-frontend/./src/canvas-utils.ts","webpack://sr-frontend/./src/load-text.ts","webpack://sr-frontend/./src/ui.ts","webpack://sr-frontend/./src/camera.ts","webpack://sr-frontend/./src/utils.ts","webpack://sr-frontend/./src/index.ts","webpack://sr-frontend/./src/skybox.ts"],"names":["loadText","async","url","resp","fetch","ok","Error","statusText","text","saveState","sessionStorage","uiState","JSON","stringify","defaultUiState","cameraBeta","useFixedVelocity","useNoTimeDelay","galilean","simultaneityFrame","relativisticBeaming","dopplerEffect","getState","parse","createRadioPicker","el","id","options","buttons","map","value","button","document","createElement","name","type","String","containerEl","idx","length","labelEl","appendChild","append","label","onChange","handler","forEach","onclick","e","target","HTMLInputElement","setValue","buttonValue","checked","setDisabled","disabled","getSceneUrl","relativityScene","initUi","slider","min","max","step","inputMode","toString","title","createSpeedSlider","addEventListener","currValue","parseFloat","Number","isNaN","toggle","createFixedSpeedToggle","galileanToggle","createGalileanToggle","relativisticBeamingToggle","createRelativisticBeamingToggle","dopplerEffectToggle","createDopplerEffectToggle","sliderLabel","toggleLabel","galileanLabel","relativisticBeamingLabel","dopplerEffectLabel","simultaneityPicker","noTimeDelayLabel","noTimeDelayToggle","createNoTimeDelayToggle","createSimultaneityPicker","scenePicker","window","location","reload","createScenePicker","uiEl","className","summaryEl","innerText","helptext","RelativisticUniversalCamera","position","scene","super","this","velocity","properVelocity","properAcceleration","dt","onAfterCheckInputsObservable","add","_camera","_eventState","copyFrom","cameraDirection","dragCoefficient","drag","normalizeToNew","scale","speed","inertia","Math","sqrt","subtractInPlace","addInPlace","properSpeed2","lengthSquared","maxProperSpeed2","normalize","scaleInPlace","invGamma","scaleToRef","undefined","maxSpeed2","gamma2","pow","engine","getEngine","getDeltaTime","getFps","setAll","cameraRotation","exp","_checkInputs","setUniforms","shader","data","int","Object","entries","uniformName","uniformValue","setInt","vec3","setVector3","sceneFilename","canvas","style","width","clientWidth","height","clientHeight","tabIndex","_e","createCanvas","speedIndicator","classList","initSpeedIndicator","vertexShaderSrc","fragShaderSrc","Promise","all","deterministicLockstep","lockstepMaxSteps","defaultCameraInfo","getNodeByID","defaultPosition","defaultRotation","rotationQuaternion","camera","keysDownward","push","keysDown","keysUpward","keysUp","keysLeft","keysRight","gamepadAngularSensibility","navigator","userAgent","match","inputs","addVirtualJoystick","minZ","maxZ","fov","initCamera","createCamera","update","setTarget","attachControl","rgbMapTexture","skipFrustumClipping","shaders","meshes","filter","mesh","material","albedo","albedoTexture","bump","bumpTexture","shaderMaterial","vertexSource","fragmentSource","attributes","uniforms","samplers","defines","setTexture","skyboxMaterial","skybox","size","sideOrientation","infiniteDistance","cubeTexture","coordinatesMode","makeSkybox","runRenderLoop","setMaxSpeed","uniformParams","getDirection","useGalilean","getUniformParams","gamma","innerHTML","toFixed","join","render","resize","focus","main","body","catch","console","error"],"mappings":"sIAAO,MCCMA,EAAWC,MAAOC,IAC7B,MAAMC,QAAaC,MAAMF,GACzB,IAAKC,EAAKE,GACR,MAAM,IAAIC,MAAMH,EAAKI,YAEvB,OAAOJ,EAAKK,QC+BRC,EAAY,KAChBC,eAAeC,QAAUC,KAAKC,UAAUF,IAGpCG,EAA0B,CAC9BC,WAAY,IACZC,kBAAkB,EAClBC,gBAAgB,EAChBC,UAAU,EACVC,kBAAmB,EACnBC,qBAAqB,EACrBC,eAAe,GAGJC,EAAW,IACW,MAA1BZ,eAAeC,QAClBC,KAAKW,MAAMb,eAAeC,SAC1BG,EAGN,IAAIH,EAAmBW,IAEvB,MA0DME,EAAoB,EAAMC,KAAIC,KAAIC,cACtC,MAAMC,EAAUD,EAAQE,KAAI,EAAGC,YAC7B,MAAMC,EAASC,SAASC,cAAc,SAItC,OAHAF,EAAOG,KAAOR,EACdK,EAAOI,KAAO,QACdJ,EAAOD,MAAQM,OAAON,GACfC,KAGHM,EAAcZ,EACpB,IAAK,IAAIa,EAAM,EAAGA,EAAMX,EAAQY,OAAQD,IAAO,CAC7C,MAAME,EAAUR,SAASC,cAAc,SACvCO,EAAQC,YAAYb,EAAQU,IAC5BE,EAAQE,OAAOf,EAAQW,GAAKK,OAC5BN,EAAYK,OAAOF,GAgCrB,MAAO,CACLZ,UACAgB,SAhBgBC,IAChBjB,EAAQkB,SAAQ,CAACf,EAAQO,KACTX,EAAQW,GAAKR,MAC3BC,EAAOgB,QAAWC,IAChB,MAAMC,EAASD,EAAEC,OACjB,GAAc,MAAVA,KAAoBA,aAAkBC,kBACxC,OAEF,MAAMpB,EAAQH,EAAQW,GAAKR,MAC3Be,EAAQf,QAQZqB,SAhCgBrB,IAChB,IAAK,IAAIQ,EAAM,EAAGA,EAAMX,EAAQY,OAAQD,IAAO,CAC7C,MAAQR,MAAOsB,GAAgBzB,EAAQW,GACxBV,EAAQU,GAChBe,QAAUD,IAAgBtB,IA6BnCwB,YAzBmBC,IACnB,IAAK,IAAIjB,EAAM,EAAGA,EAAMX,EAAQY,OAAQD,IACvBV,EAAQU,GAChBiB,SAAWA,KAkEXC,EAAc,IAClB9C,eAAe+C,iBAAmB,sBAuC9BC,EAAUjC,IACrBd,EAAUW,IAEV,MAAMqC,EAnMkB,MACxB,MAAMA,EAAS3B,SAASC,cAAc,SAQtC,OAPA0B,EAAOxB,KAAO,SACdwB,EAAOC,IAAM,IACbD,EAAOE,IAAM,IACbF,EAAOG,KAAO,QACdH,EAAOI,UAAY,UACnBJ,EAAO7B,MAAQnB,EAAQI,YAAYiD,WACnCL,EAAOM,MAAQ,oDACRN,GA0LQO,GACfP,EAAOQ,iBAAiB,UAAWnB,IACjC,MAAMC,EAASD,EAAEC,OACjB,GAAc,MAAVA,KAAoBA,aAAkBC,kBACxC,OAEF,MAAMkB,EAAYC,WAAWpB,EAAOnB,OAC/BwC,OAAOC,MAAMH,KAChBzD,EAAQI,WAAaqD,EACrB3D,QAIJ,MAAM+D,EApMuB,MAC7B,MAAMA,EAASxC,SAASC,cAAc,SAGtC,OAFAuC,EAAOrC,KAAO,WACdqC,EAAOnB,QAAU1C,EAAQK,iBAClBwD,GAgMQC,GACfD,EAAOL,iBAAiB,UAAWnB,IACjC,MAAMC,EAASD,EAAEC,OACjB,GAAc,MAAVA,KAAoBA,aAAkBC,kBACxC,OAEF,MAAMlC,EAAmBiC,EAAOI,QAChC1C,EAAQK,iBAAmBA,EAC3BP,OAGF,MAAMiE,EAjMqB,MAC3B,MAAMF,EAASxC,SAASC,cAAc,SAGtC,OAFAuC,EAAOrC,KAAO,WACdqC,EAAOnB,QAAU1C,EAAQO,SAClBsD,GA6LgBG,GACvBD,EAAeP,iBAAiB,UAAWnB,IACzC,MAAMC,EAASD,EAAEC,OACH,MAAVA,GAAoBA,aAAkBC,mBAG1CvC,EAAQO,WAAa+B,EAAOI,QAC5B5C,QAGF,MAAMmE,EApMgC,MACtC,MAAMJ,EAASxC,SAASC,cAAc,SAGtC,OAFAuC,EAAOrC,KAAO,WACdqC,EAAOnB,QAAU1C,EAAQS,oBAClBoD,GAgM2BK,GAClCD,EAA0BT,iBAAiB,UAAWnB,IACpD,MAAMC,EAASD,EAAEC,OACH,MAAVA,GAAoBA,aAAkBC,mBAG1CvC,EAAQS,sBAAwB6B,EAAOI,QACvC5C,QAGF,MAAMqE,EAvM0B,MAChC,MAAMN,EAASxC,SAASC,cAAc,SAGtC,OAFAuC,EAAOrC,KAAO,WACdqC,EAAOnB,QAAU1C,EAAQU,cAClBmD,GAmMqBO,GAC5BD,EAAoBX,iBAAiB,UAAWnB,IAC9C,MAAMC,EAASD,EAAEC,OACH,MAAVA,GAAoBA,aAAkBC,mBAG1CvC,EAAQU,gBAAkB4B,EAAOI,QACjC5C,QAGF,MAAMuE,EAAchD,SAASC,cAAc,SAC3C+C,EAAYvC,YAAYkB,GACxBqB,EAAYtC,OAAO,oCAEnB,MAAMuC,EAAcjD,SAASC,cAAc,SAC3CgD,EAAYxC,YAAY+B,GACxBS,EAAYvC,OAAO,6BAEnB,MAAMwC,EAAgBlD,SAASC,cAAc,SAC7CiD,EAAczC,YAAYiC,GAC1BQ,EAAcxC,OAAO,2BAErB,MAAMyC,EAA2BnD,SAASC,cAAc,SACxDkD,EAAyB1C,YAAYmC,GACrCO,EAAyBzC,OAAO,wBAEhC,MAAM0C,EAAqBpD,SAASC,cAAc,SAClDmD,EAAmB3C,YAAYqC,GAC/BM,EAAmB1C,OAAO,kBAE1B,MAAM2C,EA7JyB,MAC/B,MAAMhD,EAAcL,SAASC,cAAc,OACrCqD,EAAmBtD,SAASC,cAAc,SAC1CsD,EAhGwB,MAC9B,MAAMf,EAASxC,SAASC,cAAc,SAGtC,OAFAuC,EAAOrC,KAAO,WACdqC,EAAOnB,QAAU1C,EAAQM,eAClBuD,GA4FmBgB,GAC1BF,EAAiB7C,YAAY8C,GAC7BD,EAAiB5C,OAAO,yCACxB6C,EAAkBpB,iBAAiB,UAAWnB,IAC5C,MAAMC,EAASD,EAAEC,OACjB,GAAc,MAAVA,KAAoBA,aAAkBC,kBACxC,OAEF,MAAMjC,IAAmBgC,EAAOI,QAChC1C,EAAQM,eAAiBA,EACzBR,IACA6C,GAAarC,MAEfoB,EAAYI,YAAY6C,GACxB,MAAM,SAAE1C,EAAQ,SAAEO,EAAQ,YAAEG,GAAgB9B,EAAkB,CAC5DC,GAAIY,EACJX,GAAI,qBACJC,QAAS,CACP,CACEgB,MAAO,SACPb,MAAO,GAET,CACEa,MAAO,QACPb,MAAO,MAUb,OANAqB,EAASxC,EAAQQ,mBACjBmC,GAAa3C,EAAQM,gBACrB2B,GAAUd,IACRnB,EAAQQ,kBAAoBW,EAC5BrB,OAEK4B,GAwHoBoD,GACrBC,EAlHkB,MACxB,MAAMrD,EAAcL,SAASC,cAAc,OACrCU,EAAQX,SAASC,cAAc,SACrCU,EAAMD,OAAO,UACbL,EAAYI,YAAYE,GACxB,MAAM,SAAEC,EAAQ,SAAEO,GAAa3B,EAA0B,CACvDC,GAAIY,EACJX,GAAI,eACJC,QAAS,CACP,CACEgB,MAAO,OACPb,MArMQ,uBAuMV,CACEa,MAAO,SACPb,MAvMN,iFAiNA,OANAqB,EAASK,KACTZ,GAAUd,IACRpB,eAAe+C,gBAAkB3B,EAEjC6D,OAAOC,SAASC,YAEXxD,GAyFayD,GAEdC,EAAO/D,SAASC,cAAc,WACpC8D,EAAKC,UAAY,UACjB,MAAMC,EAAYjE,SAASC,cAAc,WACzCgE,EAAUC,UAAY,kBACtBH,EAAKtD,YAAYwD,GAEjB,MAAME,EAAWnE,SAASC,cAAc,OACxCkE,EAASD,UAAY,qDACrBH,EAAKtD,YAAY0D,GACjBJ,EAAKtD,YAAYuC,GACjBe,EAAKtD,YAAY0C,GACjBY,EAAKtD,YAAY2C,GACjBW,EAAKtD,YAAY4C,GACjBU,EAAKtD,YAAYwC,GACjBc,EAAKtD,YAAYyC,GACjBa,EAAKtD,YAAYiD,GACjBjE,EAAGgB,YAAYsD,ICtUjB,MAAMK,UAAoC,MAsBxC,YAAYlE,EAAcmE,EAAmBC,GAC3CC,MAAMrE,EAAMmE,EAAUC,GACtBE,KAAKC,SAAW,aAChBD,KAAKE,eAAiB,aACtBF,KAAKG,mBAAqB,aAC1BH,KAAKI,GAAK,EAEVJ,KAAKK,6BAA6BC,KAAI,CAACC,EAASC,KAC9C,IAAIJ,EAAKJ,KAAKI,GAEdJ,KAAKG,mBAAmBM,SAAST,KAAKU,iBACtC,MAAMC,EAAkBX,KAAKW,iBAAmB,EAK1CC,EAAOZ,KAAKE,eACfW,iBACAC,MACCH,EACEX,KAAKe,MACLf,KAAKgB,QACLC,KAAKC,KAAKlB,KAAKE,eAAenE,WAEpCiE,KAAKG,mBAAmBgB,gBAAgBP,GAGxCZ,KAAKE,eAAekB,WAAWpB,KAAKG,mBAAmBW,MAAMV,IAE7D,IAAIiB,EAAerB,KAAKE,eAAeoB,gBAEX,MAAxBtB,KAAKuB,iBAA2BF,EAAerB,KAAKuB,kBACtDvB,KAAKE,eACFsB,YACAC,aAAaR,KAAKC,KAAKlB,KAAKuB,kBAC/BF,EAAerB,KAAKuB,iBAEtB,MAAMG,EAAW,EAAIT,KAAKC,KAAK,EAAIG,GACnCrB,KAAKE,eAAeyB,WAAWD,EAAU1B,KAAKC,UAC9CD,KAAKH,SAASuB,WAAWpB,KAAKC,SAASa,MAAMV,OApD1C,YAAYW,GACjB,GAAa,MAATA,EAGF,OAFAf,KAAKuB,qBAAkBK,OACvB5B,KAAKW,gBAAkB,GAGzBX,KAAKe,MAAQA,EACb,MAAMc,EAAYd,EAAQA,EACpBe,EAASD,EAAY,EAAI,GAAK,EAAIA,GAAa,IACrD7B,KAAKuB,gBAAkBO,EAASD,EAChC7B,KAAKW,gBAAkB,EAAIM,KAAKc,IAAI/B,KAAKuB,gBAAiB,EAAI,GA8CzD,2BACL,OAAOvB,KAAKe,MAGP,eACL,IAAIiB,EAAShC,KAAKiC,YAGlBjC,KAAKI,GAAKa,KAAKC,KAAKc,EAAOE,gBAAoC,IAAlBF,EAAOG,WAEhDnC,KAAKI,GAAK,KACZJ,KAAKI,GAAK,IAGZJ,KAAKU,gBAAgB0B,OAAO,GAE5BpC,KAAKqC,eAAeZ,aAAaR,KAAKqB,KAAKtC,KAAKI,IAAMJ,KAAKgB,SAE3DjB,MAAMwC,eAID,oBAOT,MC1EaC,EAAc,CAACC,EAAwBC,KAClC,MAAZA,EAAKC,KACPC,OAAOC,QAAQH,EAAKC,KAAKrG,SAAQ,EAAEwG,EAAaC,MAC9CN,EAAOO,OAAOF,EAAaC,MAGd,MAAbL,EAAKO,MACPL,OAAOC,QAAQH,EAAKO,MAAM3G,SAAQ,EAAEwG,EAAaC,MAC/CN,EAAOS,WAAWJ,EAAaC,OCzBxBtJ,QAASwB,KAAIkI,oBACxBjG,EAAOjC,GACP,MAAMmI,EL1BoB,CAACnI,IAC3B,MAAMmI,EAAS5H,SAASC,cAAc,UAatC,OAZA2H,EAAOC,MAAMxD,SAAW,WACxBuD,EAAOE,MAAQrI,EAAGsI,YAClBH,EAAOI,OAASvI,EAAGwI,aACnBL,EAAOC,MAAMxD,SAAW,QACxBuD,EAAOM,SAAW,EAElBvE,OAAOxB,iBAAiB,UAAUgG,IAChCP,EAAOE,MAAQrI,EAAGsI,YAClBH,EAAOI,OAASvI,EAAGwI,gBAGrBxI,EAAGgB,YAAYmH,GACRA,GKYQQ,CAAa3I,GAEtB4I,EHuN0B,CAAC5I,IACjC,MAAM4I,EAAiBrI,SAASC,cAAc,OAG9C,OAFAoI,EAAeC,UAAUxD,IAAI,mBAC7BrF,EAAGgB,YAAY4H,GACRA,GG3NgBE,CAAmB9I,IAEnC+I,EAAiBC,SAAuBC,QAAQC,IAAI,CACzD3K,EAAS,aACTA,EAAS,eAGLwI,EAAS,IAAI,MAAOoB,GAAQ,EAAM,CACtCgB,uBAAuB,EACvBC,iBAAkB,IAGpB,sCAA4CL,EAE5C,wCAA8CC,EAE9C,MAAMnE,QAAc,gBAAsBqD,GAEpCmB,EAAoBxE,EAAMyE,YAAY,UACtCC,EAAkBF,GAAmBzE,UAAY,IAAI,MAAQ,EAAG,GAAI,GACpE4E,EAAkBH,GAAmBI,mBAErCC,EFmGoB,EAC1BjJ,EACAmE,EACAC,KAEA,MAAM6E,EAAS,IAAI/E,EExGS,UFwGyBC,EAAUC,GAE/D,MA3BiB,CAAC6E,IAElBA,EAAOC,aAAaC,KANN,IAOdF,EAAOG,SAASD,KATE,IAUlBF,EAAOI,WAAWF,KATN,IAUZF,EAAOK,OAAOH,KAZG,IAajBF,EAAOM,SAASJ,KARF,IASdF,EAAOO,UAAUL,KAVF,IAWfF,EAAOQ,0BAA4B,KApBjCC,UAAUC,UAAUC,MAAM,aAC1BF,UAAUC,UAAUC,MAAM,aAqB1BX,EAAOY,OAAOC,qBAGhBb,EAAO5D,MAAQ,EACf4D,EAAO3D,QAAU,GACjB2D,EAAOc,KAAO,GACdd,EAAOe,KAAO,IACdf,EAAOgB,IAAM,IASbC,CAAWjB,GACJA,GE1GQkB,CAAa,EAAWrB,EAAiB1E,GAEjC,MAAnB2E,GACFE,EAAOD,mBAAqBD,EAC5BE,EAAOmB,UAEPnB,EAAOoB,UAAU,cAGnBpB,EAAOqB,eAAc,GAErB,MAAMC,EAAgB,IAAI,MACxB,uBACAnG,GACA,OACA8B,EACA,6BAKF9B,EAAMoG,qBAAsB,EAE5B,MAAMC,EAAUrG,EAAMsG,OACnBC,QAAQC,KAAWA,aAAgB,QAAmC,MAAjBA,EAAKC,WAC1DlL,KAAKiL,IACJ,MAAMC,EAAWD,EAAKC,SACtB,GAAgB,MAAZA,EACF,MAAM,IAAIzM,MAAM,+BAElB,MAAM0M,EAASD,EAASE,cAClBC,EAAOH,EAASI,YAEhBC,EAAiB,IAAI,MACzB,SAAWN,EAAK5K,KAChBoE,EACA,CACE+G,aAAc7C,EACd8C,eAAgB7C,GAElB,CACE8C,WAAY,CAAC,WAAY,SAAU,UAAW,MAC9CC,SAAU,CACR,QACA,aACA,OACA,aACA,WACA,oBACA,cACA,iBACA,gBACA,uBAEFC,SAAU,CAAC,gBAAiB,cAAe,iBAC3CC,QAAiB,MAARR,EAAe,CAAC,mBAAqB,KAWlD,OARAE,EAAeO,WAAW,gBAAiBlB,GAC7B,MAAVO,GACFI,EAAeO,WAAW,gBAAiBX,GAEjC,MAARE,GACFE,EAAeO,WAAW,cAAeT,GAE3CJ,EAAKC,SAAWK,EACTA,MAIL,eAAEQ,QC9GgB3N,OAAOqG,IAC/B,MAAMuH,EAAS,gBAAsB,SAAU,CAC7CC,KAAM,IACNC,gBAAiB,kBAEZvD,EAAiBC,SAAuBC,QAAQC,IAAI,CACzD3K,EAAS,eACTA,EAAS,eAEL4N,EAAiB,IAAI,MACzB,SACAtH,EACA,CACE+G,aAAc7C,EACd8C,eAAgB7C,GAElB,CACE8C,WAAY,CAAC,WAAY,SAAU,MACnCC,SAAU,CACR,OACA,aACA,WACA,oBACA,cACA,iBACA,gBACA,uBAEFC,SAAU,CACR,gBACA,iBAEFC,QAAS,CAAC,oBAGdG,EAAOG,kBAAmB,EAC1BH,EAAOd,SAAWa,EAClB,MAAMK,EAAc,IAAI,MAAY,gBAAiB3H,EAAO,CAC1D,UACA,UACA,UACA,UACA,UACA,YAIF,OAFA2H,EAAYC,gBAAkB,kBAC9BN,EAAeD,WAAW,gBAAiBM,GACpC,CACLJ,SACAD,iBACAK,gBD4D+BE,CAAW7H,GAC5CsH,EAAeD,WAAW,gBAAiBlB,GAG3CjE,EAAO4F,eAAc,WACnB,MAAM,WAAErN,GAAeO,IAEvB6J,EAAOkD,YAAYtN,GACnB,MAAMuN,EDpHsB,CAACnD,IAC/B,MAAM,WACJpK,EAAU,SACVG,EAAQ,kBACRC,EAAiB,iBACjBH,EAAgB,eAChBC,EAAc,oBACdG,EAAmB,cACnBC,GACEC,IAKJ,MAAO,CACLmI,KAAM,CACJhD,SALiB,MAAnB0E,EAAO1E,UAAoBzF,EACvBmK,EAAOoD,aAAa,iBAAmBjH,MAAMvG,GAC7CoK,EAAO1E,UAKX0C,IAAK,CACHlI,eAAgBA,EAAiB,EAAI,EACrCE,oBACAqN,YAAatN,EAAW,EAAI,EAC5BE,oBAAqBA,EAAsB,EAAI,EAC/CC,cAAeA,EAAgB,EAAI,KC6FfoN,CAAiBtD,GACvCnC,EAAY4E,EAAgBU,GAC5B3B,EAAQ7J,SAASmG,IACfD,EAAYC,EAASqF,MAGvB,MAEM/G,EAFW+G,EAAc7E,KAAKhD,SAEblE,SACjBmM,EAAQ,EAAIjH,KAAKC,KAAK,EAAIH,EAAQA,GACxC8C,EAAesE,UAAY,CACzB,UAAUpH,EAAMqH,QAAQ,MACxB,UAAUF,EAAME,QAAQ,MACxBC,KAAK,SAEPvI,EAAMwI,YAIRnJ,OAAOxB,iBAAiB,UAAU,WAChCqE,EAAOuG,YAETnF,EAAOoF,SAGTC,CAAK,CACHxN,GAAIO,SAASkN,KACbvF,cAAenG,MACd2L,MAAMC,QAAQC","file":"100.bootstrap.js","sourcesContent":["export const createCanvas = (el: HTMLElement): HTMLCanvasElement => {\n  const canvas = document.createElement(\"canvas\");\n  canvas.style.position = \"absolute\";\n  canvas.width = el.clientWidth;\n  canvas.height = el.clientHeight;\n  canvas.style.position = \"fixed\";\n  canvas.tabIndex = 0;\n\n  window.addEventListener(\"resize\", _e => {\n    canvas.width = el.clientWidth;\n    canvas.height = el.clientHeight;\n  })\n\n  el.appendChild(canvas);\n  return canvas;\n};\n\n/**\n * Create and initialize the canvas and add to the DOM.\n *\n * @param el Element to add the canvas to.\n */\nexport const createGlContext = (\n  canvas: HTMLCanvasElement\n): WebGL2RenderingContext => {\n  const gl = canvas.getContext(\"webgl2\", {\n    antialias: true,\n  });\n\n  if (gl == null) {\n    throw new Error(\"Unable to create WebGL 2 context.\");\n  }\n\n  return gl;\n};\n","/** Load file as a string. */\nexport const loadText = async (url: string) => {\n  const resp = await fetch(url);\n  if (!resp.ok) {\n    throw new Error(resp.statusText);\n  }\n  return resp.text();\n};\n","export const enum SimultaneityFrame {\n  world = 0,\n  camera = 1,\n}\n\n/** UI configuration used in this demo. */\nexport type UiState = {\n  /** Fraction of the speed of light the camera is traveling at. */\n  cameraBeta: number;\n  /** Use a fixed velocity as the speed of light. */\n  useFixedVelocity: boolean;\n  /** Don't take into account travel time of light to reach camera. */\n  useNoTimeDelay: boolean;\n  /**\n   * True to transform according to Euclidean space. False for special\n   * relativity.\n   */\n  galilean: boolean;\n  /**\n   * Used with `useNoTimeDelay` to define which frame to use to define\n   * when events are simultaneous.\n   */\n  simultaneityFrame: SimultaneityFrame;\n  /** Set to true to enable relativistic beaming. */\n  relativisticBeaming: boolean;\n  /** Set to true to doppler shift the wavelength of light. */\n  dopplerEffect: boolean;\n};\n\nconst diceUrl = \"SubdividedCube.gltf\";\nconst sponzaUrl =\n  \"https://specialrelativitymeshes.z5.web.core.windows.net/Sponza/sponza.gltf\";\n\n/**\n * Save the state to session storage, which is preserved until the browser is\n * closed.\n */\nconst saveState = () => {\n  sessionStorage.uiState = JSON.stringify(uiState);\n};\n\nconst defaultUiState: UiState = {\n  cameraBeta: 0.95,\n  useFixedVelocity: false,\n  useNoTimeDelay: false,\n  galilean: false,\n  simultaneityFrame: SimultaneityFrame.camera,\n  relativisticBeaming: false,\n  dopplerEffect: false,\n};\n\nexport const getState = (): UiState => {\n  return sessionStorage.uiState != null\n    ? JSON.parse(sessionStorage.uiState)\n    : defaultUiState;\n};\n\nlet uiState: UiState = getState();\n\nconst createSpeedSlider = () => {\n  const slider = document.createElement(\"input\");\n  slider.type = \"number\";\n  slider.min = \"0\";\n  slider.max = \"1\";\n  slider.step = \"0.005\";\n  slider.inputMode = \"decimal\";\n  slider.value = uiState.cameraBeta?.toString();\n  slider.title = \"Camera speed as a fraction of the speed of light.\";\n  return slider;\n};\n\nconst createFixedSpeedToggle = () => {\n  const toggle = document.createElement(\"input\");\n  toggle.type = \"checkbox\";\n  toggle.checked = uiState.useFixedVelocity;\n  return toggle;\n};\n\nconst createNoTimeDelayToggle = () => {\n  const toggle = document.createElement(\"input\");\n  toggle.type = \"checkbox\";\n  toggle.checked = uiState.useNoTimeDelay;\n  return toggle;\n};\n\nconst createGalileanToggle = () => {\n  const toggle = document.createElement(\"input\");\n  toggle.type = \"checkbox\";\n  toggle.checked = uiState.galilean;\n  return toggle;\n};\n\nconst createRelativisticBeamingToggle = () => {\n  const toggle = document.createElement(\"input\");\n  toggle.type = \"checkbox\";\n  toggle.checked = uiState.relativisticBeaming;\n  return toggle;\n};\n\nconst createDopplerEffectToggle = () => {\n  const toggle = document.createElement(\"input\");\n  toggle.type = \"checkbox\";\n  toggle.checked = uiState.dopplerEffect;\n  return toggle;\n};\n\ntype PickerOption<T> = {\n  label: string;\n  value: T;\n};\n\ntype Picker<T> = {\n  el: HTMLElement;\n  id: string;\n  options: PickerOption<T>[];\n};\n\nconst createRadioPicker = <T>({ el, id, options }: Picker<T>) => {\n  const buttons = options.map(({ value }) => {\n    const button = document.createElement(\"input\");\n    button.name = id;\n    button.type = \"radio\";\n    button.value = String(value);\n    return button;\n  });\n\n  const containerEl = el;\n  for (let idx = 0; idx < options.length; idx++) {\n    const labelEl = document.createElement(\"label\");\n    labelEl.appendChild(buttons[idx]);\n    labelEl.append(options[idx].label);\n    containerEl.append(labelEl);\n  }\n\n  const setValue = (value: T) => {\n    for (let idx = 0; idx < options.length; idx++) {\n      const { value: buttonValue } = options[idx];\n      const button = buttons[idx];\n      button.checked = buttonValue === value;\n    }\n  };\n\n  const setDisabled = (disabled: boolean) => {\n    for (let idx = 0; idx < options.length; idx++) {\n      const button = buttons[idx];\n      button.disabled = disabled;\n    }\n  };\n\n  const onChange = (handler: (value: T) => void) => {\n    buttons.forEach((button, idx) => {\n      const value = options[idx].value;\n      button.onclick = (e: MouseEvent) => {\n        const target = e.target;\n        if (target == null || !(target instanceof HTMLInputElement)) {\n          return;\n        }\n        const value = options[idx].value;\n        handler(value);\n      };\n    });\n  };\n\n  return {\n    buttons,\n    onChange,\n    setValue,\n    setDisabled,\n  };\n};\n\nconst createSimultaneityPicker = () => {\n  const containerEl = document.createElement(\"div\");\n  const noTimeDelayLabel = document.createElement(\"label\");\n  const noTimeDelayToggle = createNoTimeDelayToggle();\n  noTimeDelayLabel.appendChild(noTimeDelayToggle);\n  noTimeDelayLabel.append(\"Assume no light travel time in frame:\");\n  noTimeDelayToggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    const useNoTimeDelay = !!target.checked;\n    uiState.useNoTimeDelay = useNoTimeDelay;\n    saveState();\n    setDisabled(!useNoTimeDelay);\n  });\n  containerEl.appendChild(noTimeDelayLabel);\n  const { onChange, setValue, setDisabled } = createRadioPicker({\n    el: containerEl,\n    id: \"simultaneity-frame\",\n    options: [\n      {\n        label: \"Camera\",\n        value: SimultaneityFrame.camera,\n      },\n      {\n        label: \"World\",\n        value: SimultaneityFrame.world,\n      },\n    ],\n  });\n  setValue(uiState.simultaneityFrame);\n  setDisabled(!uiState.useNoTimeDelay);\n  onChange((value) => {\n    uiState.simultaneityFrame = value;\n    saveState();\n  });\n  return containerEl;\n};\n\nexport const getSceneUrl = (): string => {\n  return sessionStorage.relativityScene || \"SubdividedCube.gltf\";\n};\n\nconst createScenePicker = () => {\n  const containerEl = document.createElement(\"div\");\n  const label = document.createElement(\"label\");\n  label.append(\"Scene:\");\n  containerEl.appendChild(label);\n  const { onChange, setValue } = createRadioPicker<string>({\n    el: containerEl,\n    id: \"scene-picker\",\n    options: [\n      {\n        label: \"Dice\",\n        value: diceUrl,\n      },\n      {\n        label: \"Sponza\",\n        value: sponzaUrl,\n      },\n    ],\n  });\n  setValue(getSceneUrl());\n  onChange((value) => {\n    sessionStorage.relativityScene = value;\n    // Reload the browser for simplicity.\n    window.location.reload();\n  });\n  return containerEl;\n};\n\nexport const initSpeedIndicator = (el: HTMLElement) => {\n  const speedIndicator = document.createElement(\"div\");\n  speedIndicator.classList.add(\"speed-indicator\");\n  el.appendChild(speedIndicator);\n  return speedIndicator;\n};\n\n/** Element to add the UI to. */\nexport const initUi = (el: HTMLElement) => {\n  uiState = getState();\n\n  const slider = createSpeedSlider();\n  slider.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    const currValue = parseFloat(target.value);\n    if (!Number.isNaN(currValue)) {\n      uiState.cameraBeta = currValue;\n      saveState();\n    }\n  });\n\n  const toggle = createFixedSpeedToggle();\n  toggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    const useFixedVelocity = target.checked;\n    uiState.useFixedVelocity = useFixedVelocity;\n    saveState();\n  });\n\n  const galileanToggle = createGalileanToggle();\n  galileanToggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    uiState.galilean = !!target.checked;\n    saveState();\n  });\n\n  const relativisticBeamingToggle = createRelativisticBeamingToggle();\n  relativisticBeamingToggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    uiState.relativisticBeaming = !!target.checked;\n    saveState();\n  });\n\n  const dopplerEffectToggle = createDopplerEffectToggle();\n  dopplerEffectToggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    uiState.dopplerEffect = !!target.checked;\n    saveState();\n  });\n\n  const sliderLabel = document.createElement(\"label\");\n  sliderLabel.appendChild(slider);\n  sliderLabel.append(\"Max camera speed (fraction of c)\");\n\n  const toggleLabel = document.createElement(\"label\");\n  toggleLabel.appendChild(toggle);\n  toggleLabel.append(\"Assume fixed camera speed\");\n\n  const galileanLabel = document.createElement(\"label\");\n  galileanLabel.appendChild(galileanToggle);\n  galileanLabel.append(\"Use Galilean relativity\");\n\n  const relativisticBeamingLabel = document.createElement(\"label\");\n  relativisticBeamingLabel.appendChild(relativisticBeamingToggle);\n  relativisticBeamingLabel.append(\"Relativistic beaming\");\n\n  const dopplerEffectLabel = document.createElement(\"label\");\n  dopplerEffectLabel.appendChild(dopplerEffectToggle);\n  dopplerEffectLabel.append(\"Doppler effect\");\n\n  const simultaneityPicker = createSimultaneityPicker();\n  const scenePicker = createScenePicker();\n\n  const uiEl = document.createElement(\"details\");\n  uiEl.className = \"main-ui\";\n  const summaryEl = document.createElement(\"summary\");\n  summaryEl.innerText = \"Help / Settings\";\n  uiEl.appendChild(summaryEl);\n\n  const helptext = document.createElement(\"div\");\n  helptext.innerText = \"Use WASD and mouse to move or touch on smartphone.\";\n  uiEl.appendChild(helptext);\n  uiEl.appendChild(sliderLabel);\n  uiEl.appendChild(relativisticBeamingLabel);\n  uiEl.appendChild(dopplerEffectLabel);\n  uiEl.appendChild(simultaneityPicker);\n  uiEl.appendChild(toggleLabel);\n  uiEl.appendChild(galileanLabel);\n  uiEl.appendChild(scenePicker);\n  el.appendChild(uiEl);\n};\n","import {\n  Scene,\n  Vector3,\n  Epsilon,\n  UniversalCamera,\n  TargetCamera,\n} from \"@babylonjs/core\";\n\nexport interface RelativisticCamera extends TargetCamera {\n  velocity: Vector3;\n  properVelocity: Vector3;\n  /** Set the max (coordinate) speed. */\n  setMaxSpeed(speed: number | undefined): void;\n}\n\n/**\n * Modifications to the default camera to get smooth acceleration and\n * deceleration. This is necessary to get a smooth velocity.\n *\n * This could probably be replaced with a standard physics integrator.\n */\nclass RelativisticUniversalCamera extends UniversalCamera {\n  velocity: Vector3;\n  properVelocity: Vector3;\n  properAcceleration: Vector3;\n  dt: number;\n\n  maxProperSpeed2: number | undefined;\n  dragCoefficient: number | undefined;\n\n  public setMaxSpeed(speed: number | undefined) {\n    if (speed == null) {\n      this.maxProperSpeed2 = undefined;\n      this.dragCoefficient = 0;\n      return;\n    }\n    this.speed = speed;\n    const maxSpeed2 = speed * speed;\n    const gamma2 = maxSpeed2 < 1 ? 1 / (1 - maxSpeed2) : 10000;\n    this.maxProperSpeed2 = gamma2 * maxSpeed2;\n    this.dragCoefficient = 1 / Math.pow(this.maxProperSpeed2, 1 / 4);\n  }\n\n  constructor(name: string, position: Vector3, scene: Scene) {\n    super(name, position, scene);\n    this.velocity = Vector3.Zero();\n    this.properVelocity = Vector3.Zero();\n    this.properAcceleration = Vector3.Zero();\n    this.dt = 0;\n\n    this.onAfterCheckInputsObservable.add((_camera, _eventState) => {\n      let dt = this.dt;\n      // Apply acceleration with a drag term.\n      this.properAcceleration.copyFrom(this.cameraDirection);\n      const dragCoefficient = this.dragCoefficient ?? 0;\n      // Scaling the drag factor by the sqrt of the velocity is arbitrary\n      // and I just did it because it's cleaner. If you change it then\n      // you also need to change the drag coefficient. If below were\n      // pow(x, 1/3) then above would be `pow(maxProperSpeed, 1/2*1/3).\n      const drag = this.properVelocity\n        .normalizeToNew()\n        .scale(\n          dragCoefficient *\n            this.speed *\n            this.inertia *\n            Math.sqrt(this.properVelocity.length())\n        );\n      this.properAcceleration.subtractInPlace(drag);\n\n      // Euler integration step.\n      this.properVelocity.addInPlace(this.properAcceleration.scale(dt));\n      // Compute the normal velocity from the proper velocity.\n      let properSpeed2 = this.properVelocity.lengthSquared();\n      // If a max speed is set, then we should respect it.\n      if (this.maxProperSpeed2 != null && properSpeed2 > this.maxProperSpeed2) {\n        this.properVelocity\n          .normalize()\n          .scaleInPlace(Math.sqrt(this.maxProperSpeed2));\n        properSpeed2 = this.maxProperSpeed2;\n      }\n      const invGamma = 1 / Math.sqrt(1 + properSpeed2);\n      this.properVelocity.scaleToRef(invGamma, this.velocity);\n      this.position.addInPlace(this.velocity.scale(dt));\n    });\n  }\n\n  public _computeLocalCameraSpeed() {\n    return this.speed;\n  }\n\n  public _checkInputs() {\n    var engine = this.getEngine();\n    // This is taken from the Babylon JS code. Not sure why it's not just\n    // `getDeltaTime`.\n    this.dt = Math.sqrt(engine.getDeltaTime() / (engine.getFps() * 100.0));\n    // Don't allow the timestep to get too large, so clamp it.\n    if (this.dt > 0.1) {\n      this.dt = 0.1;\n    }\n    // Reset the camera direction.\n    this.cameraDirection.setAll(0);\n    // Smoothly stop rotation when rotation is stopped.\n    this.cameraRotation.scaleInPlace(Math.exp(-this.dt) * this.inertia);\n\n    super._checkInputs();\n  }\n\n  /** Don't allow the default position update. */\n  public _updatePosition() {}\n}\n\n/**\n * Not great check, but used to determine if we should use a virtual\n * joystick or wasd keyboard.\n */\nconst runningSmartphone = () => {\n  return (\n    navigator.userAgent.match(/Android/i) ||\n    navigator.userAgent.match(/iPhone/i)\n  );\n};\n\nconst keyForward = 87;\nconst keyBackward = 83;\nconst keyUp = 69;\nconst keyDown = 81;\nconst keyRight = 68;\nconst keyLeft = 65;\n\nconst initCamera = (camera: RelativisticUniversalCamera) => {\n  // Enable WASD keys for camera control.\n  camera.keysDownward.push(keyDown);\n  camera.keysDown.push(keyBackward);\n  camera.keysUpward.push(keyUp);\n  camera.keysUp.push(keyForward);\n  camera.keysLeft.push(keyLeft);\n  camera.keysRight.push(keyRight);\n  camera.gamepadAngularSensibility = 100;\n  if (runningSmartphone()) {\n    camera.inputs.addVirtualJoystick();\n  }\n\n  camera.speed = 1.0;\n  camera.inertia = 0.9;\n  camera.minZ = 0.1;\n  camera.maxZ = 10000;\n  camera.fov = 0.9;\n};\n\nexport const createCamera = (\n  name: string,\n  position: Vector3,\n  scene: Scene\n): RelativisticCamera => {\n  const camera = new RelativisticUniversalCamera(name, position, scene);\n  initCamera(camera);\n  return camera;\n};\n","import { ShaderMaterial, Vector3 } from \"@babylonjs/core\";\nimport { RelativisticCamera } from \"./camera\";\nimport { getState } from \"./ui\";\n\nexport type UniformParams = {\n  int?: Record<string, number>;\n  vec3?: Record<string, Vector3>;\n};\n\n/**\n * Get uniform parameters for shader from UI and camera.\n */\nexport const getUniformParams = (camera: RelativisticCamera) => {\n  const {\n    cameraBeta,\n    galilean,\n    simultaneityFrame,\n    useFixedVelocity,\n    useNoTimeDelay,\n    relativisticBeaming,\n    dopplerEffect,\n  } = getState();\n  const velocity =\n    camera.velocity == null || useFixedVelocity\n      ? camera.getDirection(Vector3.Forward()).scale(cameraBeta)\n      : camera.velocity;\n  return {\n    vec3: {\n      velocity,\n    },\n    int: {\n      useNoTimeDelay: useNoTimeDelay ? 1 : 0,\n      simultaneityFrame,\n      useGalilean: galilean ? 1 : 0,\n      relativisticBeaming: relativisticBeaming ? 1 : 0,\n      dopplerEffect: dopplerEffect ? 1 : 0,\n    },\n  };\n};\n\n/** Convenience function for setting a bunch of uniforms on a shader. */\nexport const setUniforms = (shader: ShaderMaterial, data: UniformParams) => {\n  if (data.int != null) {\n    Object.entries(data.int).forEach(([uniformName, uniformValue]) => {\n      shader.setInt(uniformName, uniformValue);\n    });\n  }\n  if (data.vec3 != null) {\n    Object.entries(data.vec3).forEach(([uniformName, uniformValue]) => {\n      shader.setVector3(uniformName, uniformValue);\n    });\n  }\n};\n","import {\n  Effect,\n  Engine,\n  InstancedMesh,\n  PBRMaterial,\n  SceneLoader,\n  ShaderMaterial,\n  TransformNode,\n  Vector3,\n  Texture,\n} from \"@babylonjs/core\";\nimport \"@babylonjs/loaders/glTF/2.0\";\nimport { createCanvas } from \"./canvas-utils\";\nimport { loadText } from \"./load-text\";\nimport { getState, initUi, initSpeedIndicator, getSceneUrl } from \"./ui\";\nimport { createCamera } from \"./camera\";\nimport { makeSkybox } from \"./skybox\";\nimport { getUniformParams, setUniforms } from \"./utils\";\n\ntype Config = {\n  el: HTMLElement;\n  sceneFilename: string;\n};\n\nconst main = async ({ el, sceneFilename }: Config) => {\n  initUi(el);\n  const canvas = createCanvas(el);\n\n  const speedIndicator = initSpeedIndicator(el);\n\n  const [vertexShaderSrc, fragShaderSrc] = await Promise.all([\n    loadText(\"main.vert\"),\n    loadText(\"main.frag\"),\n  ]);\n\n  const engine = new Engine(canvas, true, {\n    deterministicLockstep: true,\n    lockstepMaxSteps: 4,\n  });\n\n  Effect.ShadersStore[\"customVertexShader\"] = vertexShaderSrc;\n\n  Effect.ShadersStore[\"customFragmentShader\"] = fragShaderSrc;\n\n  const scene = await SceneLoader.LoadAsync(sceneFilename);\n\n  const defaultCameraInfo = scene.getNodeByID(\"Camera\") as TransformNode;\n  const defaultPosition = defaultCameraInfo?.position || new Vector3(0, 0, -1);\n  const defaultRotation = defaultCameraInfo?.rotationQuaternion;\n\n  const camera = createCamera(\"camera1\", defaultPosition, scene);\n\n  if (defaultRotation != null) {\n    camera.rotationQuaternion = defaultRotation;\n    camera.update();\n  } else {\n    camera.setTarget(Vector3.Zero());\n  }\n  // This attaches the camera to the canvas\n  camera.attachControl(true);\n\n  const rgbMapTexture = new Texture(\n    \"./lambda_rgb_map.png\",\n    scene,\n    false,\n    undefined,\n    Texture.BILINEAR_SAMPLINGMODE\n  );\n\n  // Need to skip this due to movement of vertices from relativistic\n  // corrections.\n  scene.skipFrustumClipping = true;\n\n  const shaders = scene.meshes\n    .filter((mesh) => !(mesh instanceof InstancedMesh) && mesh.material != null)\n    .map((mesh) => {\n      const material = mesh.material as PBRMaterial;\n      if (material == null) {\n        throw new Error(\"Material should not be null\");\n      }\n      const albedo = material.albedoTexture;\n      const bump = material.bumpTexture;\n\n      const shaderMaterial = new ShaderMaterial(\n        \"shader\" + mesh.name,\n        scene,\n        {\n          vertexSource: vertexShaderSrc,\n          fragmentSource: fragShaderSrc,\n        },\n        {\n          attributes: [\"position\", \"normal\", \"tangent\", \"uv\"],\n          uniforms: [\n            \"world\",\n            \"finalWorld\",\n            \"view\",\n            \"projection\",\n            \"velocity\",\n            \"simultaneityFrame\",\n            \"useGalilean\",\n            \"useNoTimeDelay\",\n            \"dopplerEffect\",\n            \"relativisticBeaming\",\n          ],\n          samplers: [\"albedoSampler\", \"bumpSampler\", \"rgbMapSampler\"],\n          defines: bump != null ? [\"#define TANGENT\"] : [],\n        }\n      );\n      shaderMaterial.setTexture(\"rgbMapSampler\", rgbMapTexture);\n      if (albedo != null) {\n        shaderMaterial.setTexture(\"albedoSampler\", albedo);\n      }\n      if (bump != null) {\n        shaderMaterial.setTexture(\"bumpSampler\", bump);\n      }\n      mesh.material = shaderMaterial;\n      return shaderMaterial;\n    });\n\n  // Skybox is used so that we correctly shade the environment at infinity.\n  const { skyboxMaterial } = await makeSkybox(scene);\n  skyboxMaterial.setTexture(\"rgbMapSampler\", rgbMapTexture);\n\n  // Register a render loop to repeatedly render the scene\n  engine.runRenderLoop(function () {\n    const { cameraBeta } = getState();\n    // Set the maximum allowed speed.\n    camera.setMaxSpeed(cameraBeta);\n    const uniformParams = getUniformParams(camera);\n    setUniforms(skyboxMaterial, uniformParams);\n    shaders.forEach((shader) => {\n      setUniforms(shader!, uniformParams);\n    });\n\n    const velocity = uniformParams.vec3.velocity;\n    // Set the speed indicator in the UI.\n    const speed = velocity.length();\n    const gamma = 1 / Math.sqrt(1 - speed * speed);\n    speedIndicator.innerHTML = [\n      `Speed: ${speed.toFixed(3)}c`,\n      `Gamma: ${gamma.toFixed(3)}`,\n    ].join(\"<br/>\");\n\n    scene.render();\n  });\n\n  // Watch for browser/canvas resize events\n  window.addEventListener(\"resize\", function () {\n    engine.resize();\n  });\n  canvas.focus();\n};\n\nmain({\n  el: document.body,\n  sceneFilename: getSceneUrl(),\n}).catch(console.error);\n","import {\n  ShaderMaterial,\n  Texture,\n  CubeTexture,\n  Scene,\n  MeshBuilder,\n  Mesh\n} from \"@babylonjs/core\";\nimport { loadText } from \"./load-text\";\n\nexport const makeSkybox = async (scene: Scene) => {\n  const skybox = MeshBuilder.CreateBox(\"skybox\", {\n    size: 1000,\n    sideOrientation: Mesh.BACKSIDE,\n  });\n  const [vertexShaderSrc, fragShaderSrc] = await Promise.all([\n    loadText(\"skybox.vert\"),\n    loadText(\"main.frag\"),\n  ]);\n  const skyboxMaterial = new ShaderMaterial(\n    \"skybox\",\n    scene,\n    {\n      vertexSource: vertexShaderSrc,\n      fragmentSource: fragShaderSrc,\n    },\n    {\n      attributes: [\"position\", \"normal\", \"uv\"],\n      uniforms: [\n        \"view\",\n        \"projection\",\n        \"velocity\",\n        \"simultaneityFrame\",\n        \"useGalilean\",\n        \"useNoTimeDelay\",\n        \"dopplerEffect\",\n        \"relativisticBeaming\",\n      ],\n      samplers: [\n        \"skyboxSampler\",\n        \"rgbMapSampler\",\n      ],\n      defines: [\"#define SKYBOX\"]\n    },\n  );\n  skybox.infiniteDistance = true;\n  skybox.material = skyboxMaterial;\n  const cubeTexture = new CubeTexture(\"skybox/skybox\", scene, [\n    \"_px.png\",\n    \"_py.png\",\n    \"_pz.png\",\n    \"_nx.png\",\n    \"_ny.png\",\n    \"_nz.png\",\n  ]);\n  cubeTexture.coordinatesMode = Texture.SKYBOX_MODE;\n  skyboxMaterial.setTexture(\"skyboxSampler\", cubeTexture);\n  return {\n    skybox,\n    skyboxMaterial,\n    cubeTexture,\n  };\n};\n"],"sourceRoot":""}