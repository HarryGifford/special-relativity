{"version":3,"sources":["webpack://create-wasm-app/./src/canvas-utils.ts","webpack://create-wasm-app/./src/load-text.ts","webpack://create-wasm-app/./src/ui.ts","webpack://create-wasm-app/./src/camera.ts","webpack://create-wasm-app/./src/index.ts"],"names":["loadText","async","url","resp","fetch","ok","Error","statusText","text","saveState","sessionStorage","uiState","JSON","stringify","defaultUiState","cameraBeta","useFixedVelocity","galilean","getState","parse","RelativisticUniversalCamera","name","position","scene","super","this","velocity","properVelocity","properAcceleration","dt","onAfterCheckInputsObservable","add","_camera","_eventState","cameraDirection","length","scaleInPlace","Math","exp","inertia","copyFrom","addInPlace","scale","properSpeed2","lengthSquared","gamma","sqrt","scaleToRef","speed","engine","getEngine","getDeltaTime","getFps","setAll","cameraRotation","_checkInputs","el","document","body","style","display","flexDirection","slider","createElement","type","min","max","step","value","toString","title","createSpeedSlider","addEventListener","e","target","HTMLInputElement","currValue","parseFloat","Number","isNaN","disabled","toggle","checked","createFixedSpeedToggle","galileanToggle","createGalileanToggle","toggleLabel","innerText","appendChild","sliderLabel","galileanLabel","uiEl","className","helptext","initUi","canvasContainer","flex","canvas","width","clientWidth","height","clientHeight","tabIndex","window","_e","createCanvas","vertexShaderSrc","fragShaderSrc","Promise","all","deterministicLockstep","lockstepMaxSteps","location","href","defaultCameraInfo","getNodeByID","defaultPosition","defaultRotation","rotationQuaternion","camera","keysDownward","push","keysDown","keysUpward","keysUp","keysLeft","keysRight","gamepadAngularSensibility","navigator","userAgent","match","inputs","addVirtualJoystick","minZ","maxZ","fov","initCamera","createCamera","update","setTarget","attachControl","clearColor","set","skipFrustumClipping","shaders","meshes","filter","mesh","map","albedo","material","albedoTexture","shaderMaterial","vertexSource","fragmentSource","attributes","uniforms","defines","setTexture","runRenderLoop","getDirection","forEach","shader","setVector3","setInt","render","resize","focus","main","catch","console","error"],"mappings":"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","file":"251.bootstrap.js","sourcesContent":["export const createCanvas = (el: HTMLElement): HTMLCanvasElement => {\n  const canvas = document.createElement(\"canvas\");\n  canvas.style.position = \"absolute\";\n  canvas.width = el.clientWidth;\n  canvas.height = el.clientHeight;\n  canvas.style.position = \"fixed\";\n  canvas.tabIndex = 0;\n\n  window.addEventListener(\"resize\", _e => {\n    canvas.width = el.clientWidth;\n    canvas.height = el.clientHeight;\n  })\n\n  el.appendChild(canvas);\n  return canvas;\n};\n\n/**\n * Create and initialize the canvas and add to the DOM.\n *\n * @param el Element to add the canvas to.\n */\nexport const createGlContext = (\n  canvas: HTMLCanvasElement\n): WebGL2RenderingContext => {\n  const gl = canvas.getContext(\"webgl2\", {\n    antialias: true,\n  });\n\n  if (gl == null) {\n    throw new Error(\"Unable to create WebGL 2 context.\");\n  }\n\n  return gl;\n};\n","/** Load file as a string. */\nexport const loadText = async (url: string) => {\n  const resp = await fetch(url);\n  if (!resp.ok) {\n    throw new Error(resp.statusText);\n  }\n  return resp.text();\n};\n","/** UI configuration used in this demo. */\nexport type UiState = {\n  /** Fraction of the speed of light the camera is traveling at. */\n  cameraBeta: number;\n  /** Use a fixed velocity as the speed of light. */\n  useFixedVelocity: boolean;\n  /**\n   * True to transform according to Euclidean space. False for special\n   * relativity.\n   */\n  galilean: boolean;\n};\n\n/**\n * Save the state to session storage, which is preserved until the browser is\n * closed.\n */\nconst saveState = () => {\n  sessionStorage.uiState = JSON.stringify(uiState);\n};\n\nconst defaultUiState: UiState = {\n  cameraBeta: 0.95,\n  useFixedVelocity: false,\n  galilean: false\n};\n\nexport const getState = (): UiState => {\n  return sessionStorage.uiState != null\n    ? JSON.parse(sessionStorage.uiState)\n    : defaultUiState;\n};\n\nlet uiState: UiState = getState();\n\nconst createSpeedSlider = () => {\n  const slider = document.createElement(\"input\");\n  slider.type = \"number\";\n  slider.min = \"0\";\n  slider.max = \"0.99999\";\n  slider.step = \"0.005\";\n  slider.value = uiState.cameraBeta?.toString();\n  slider.title =\n    \"Fraction of the speed of light. \" +\n    \"Only relevant when box above is checked.\";\n  return slider;\n};\n\nconst createFixedSpeedToggle = () => {\n  const toggle = document.createElement(\"input\");\n  toggle.type = \"checkbox\";\n  toggle.checked = uiState.useFixedVelocity;\n  return toggle;\n};\n\nconst createGalileanToggle = () => {\n  const toggle = document.createElement(\"input\");\n  toggle.type = \"checkbox\";\n  toggle.checked = uiState.galilean;\n  return toggle;\n};\n\n/** Element to add the UI to. */\nexport const initUi = (el: HTMLElement) => {\n  uiState = getState();\n\n  const slider = createSpeedSlider();\n  slider.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    const currValue = parseFloat(target.value);\n    if (!Number.isNaN(currValue)) {\n      uiState.cameraBeta = currValue;\n      saveState();\n    }\n  });\n  slider.disabled = !uiState.useFixedVelocity;\n\n  const toggle = createFixedSpeedToggle();\n  toggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    uiState.useFixedVelocity = target.checked;\n    // Disable the slider when not using fixed velocity.\n    slider.disabled = !uiState.useFixedVelocity;\n    saveState();\n  });\n\n  const galileanToggle = createGalileanToggle();\n  galileanToggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    uiState.galilean = !!target.checked;\n    saveState();\n  })\n\n  const toggleLabel = document.createElement(\"label\");\n  toggleLabel.innerText = \"Assume fixed camera speed:\";\n  toggleLabel.appendChild(toggle);\n\n  const sliderLabel = document.createElement(\"label\");\n  sliderLabel.innerText = \"Fixed camera speed (fraction of c):\";\n  sliderLabel.appendChild(slider);\n\n  const galileanLabel = document.createElement(\"label\");\n  galileanLabel.innerText = \"Use Galilean relativity:\"\n  galileanLabel.appendChild(galileanToggle);\n\n  const uiEl = document.createElement(\"div\");\n  uiEl.className = \"main-ui\";\n\n  const helptext = document.createElement(\"div\");\n  helptext.innerText = \"Use WASD and mouse to move or touch on smartphone.\"\n  uiEl.appendChild(helptext);\n  uiEl.appendChild(toggleLabel);\n  uiEl.appendChild(sliderLabel);\n  uiEl.appendChild(galileanLabel);\n  el.appendChild(uiEl);\n};\n","import {\n  Scene,\n  Vector3,\n  Epsilon,\n  UniversalCamera,\n  TargetCamera,\n} from \"@babylonjs/core\";\n\nexport interface RelativisticCamera extends TargetCamera {\n  velocity: Vector3;\n  properVelocity: Vector3;\n}\n\n/**\n * Modifications to the default camera to get smooth acceleration and\n * deceleration. This is necessary to get a smooth velocity.\n *\n * This could probably be replaced with a standard physics integrator.\n */\nclass RelativisticUniversalCamera extends UniversalCamera {\n  velocity: Vector3;\n  properVelocity: Vector3;\n  properAcceleration: Vector3;\n  dt: number;\n  constructor(name: string, position: Vector3, scene: Scene) {\n    super(name, position, scene);\n    this.velocity = Vector3.Zero();\n    this.properVelocity = Vector3.Zero();\n    this.properAcceleration = Vector3.Zero();\n    this.dt = 0;\n\n    this.onAfterCheckInputsObservable.add((_camera, _eventState) => {\n      let dt = this.dt;\n      if (this.cameraDirection.length() <= Epsilon) {\n        // Keys are not pressed, so we decelerate.\n        this.properVelocity.scaleInPlace(Math.exp(-dt) * this.inertia);\n      } else {\n        // Otherwise, apply constant acceleration.\n        this.properAcceleration.copyFrom(this.cameraDirection);\n        // Euler integration step.\n        this.properVelocity.addInPlace(this.properAcceleration.scale(dt));\n      }\n      // this.cameraDirection.setAll(0);\n      // Compute the normal velocity from the proper velocity.\n      const properSpeed2 = this.properVelocity.lengthSquared();\n      const gamma = Math.sqrt(1 + properSpeed2);\n      this.properVelocity.scaleToRef(1 / gamma, this.velocity);\n      this.position.addInPlace(this.velocity.scale(dt));\n    });\n  }\n\n  public _computeLocalCameraSpeed() {\n    return this.speed;\n  }\n\n  public _checkInputs() {\n    var engine = this.getEngine();\n    this.dt = Math.sqrt(engine.getDeltaTime() / (engine.getFps() * 100.0));\n    // Reset the camera direction.\n    this.cameraDirection.setAll(0);\n    this.cameraRotation.scaleInPlace(Math.exp(-this.dt) * this.inertia);\n\n    super._checkInputs();\n  }\n\n  /** Don't allow the default position update. */\n  public _updatePosition() {}\n}\n\n/**\n * Not great check, but used to determine if we should use a virtual\n * joystick or wasd keyboard.\n */\nconst runningSmartphone = () => {\n  return (\n    navigator.userAgent.match(/Android/i) ||\n    navigator.userAgent.match(/iPhone/i)\n  );\n};\n\nconst keyForward = 87;\nconst keyBackward = 83;\nconst keyUp = 69;\nconst keyDown = 81;\nconst keyRight = 68;\nconst keyLeft = 65;\n\nconst initCamera = (camera: RelativisticUniversalCamera) => {\n  camera.keysDownward.push(keyDown);\n  camera.keysDown.push(keyBackward);\n  camera.keysUpward.push(keyUp);\n  camera.keysUp.push(keyForward);\n  camera.keysLeft.push(keyLeft);\n  camera.keysRight.push(keyRight);\n  camera.gamepadAngularSensibility = 100;\n  if (runningSmartphone()) {\n    camera.inputs.addVirtualJoystick();\n  }\n\n  camera.speed = 0.5;\n  camera.inertia = 0.9;\n  camera.minZ = 0.1;\n  camera.maxZ = 10000;\n  camera.fov = 0.9;\n}\n\nexport const createCamera = (\n  name: string,\n  position: Vector3,\n  scene: Scene\n): RelativisticCamera => {\n  const camera = new RelativisticUniversalCamera(name, position, scene);\n  initCamera(camera);\n  return camera;\n};\n","import {\n  Effect,\n  Engine,\n  InstancedMesh,\n  PBRMaterial,\n  SceneLoader,\n  ShaderMaterial,\n  TransformNode,\n  Vector3,\n} from \"@babylonjs/core\";\nimport \"@babylonjs/loaders/glTF/2.0\";\nimport { createCanvas } from \"./canvas-utils\";\nimport { loadText } from \"./load-text\";\nimport { getState, initUi } from \"./ui\";\nimport { createCamera } from \"./camera\";\n\nconst main = async () => {\n  const el = document.body;\n  el.style.display = \"flex\";\n  el.style.flexDirection = \"column\";\n  initUi(el);\n  const canvasContainer = document.createElement(\"div\");\n  canvasContainer.style.flex = \"1 1 auto\";\n  document.body.appendChild(canvasContainer);\n  const canvas = createCanvas(canvasContainer);\n\n  const [vertexShaderSrc, fragShaderSrc] = await Promise.all([\n    loadText(\"main.vert\"),\n    loadText(\"main.frag\"),\n  ]);\n\n  const engine = new Engine(canvas, true, {\n    deterministicLockstep: true,\n    lockstepMaxSteps: 4,\n  });\n\n  Effect.ShadersStore[\"customVertexShader\"] = vertexShaderSrc;\n\n  Effect.ShadersStore[\"customFragmentShader\"] = fragShaderSrc;\n\n  const scene = await SceneLoader.LoadAsync(\n    window.location.href,\n    \"SubdividedCube.gltf\",\n    engine\n  );\n\n  const defaultCameraInfo = scene.getNodeByID(\"Camera\") as TransformNode;\n  const defaultPosition = defaultCameraInfo?.position || new Vector3(0, 0, -1);\n  const defaultRotation = defaultCameraInfo?.rotationQuaternion;\n\n  const camera = createCamera(\"camera1\", defaultPosition, scene);\n\n  if (defaultRotation != null) {\n    camera.rotationQuaternion = defaultRotation;\n    camera.update();\n  } else {\n    camera.setTarget(Vector3.Zero());\n  }\n  // This attaches the camera to the canvas\n  camera.attachControl(true);\n\n  scene.clearColor.set(0.2, 0.3, 0.6, 1);\n\n  // Need to skip this due to movement of vertices from relativistic\n  // corrections.\n  scene.skipFrustumClipping = true;\n\n  const shaders = scene.meshes\n    .filter((mesh) => !(mesh instanceof InstancedMesh))\n    .map((mesh) => {\n      const material = mesh.material as PBRMaterial;\n      const albedo = material?.albedoTexture;\n\n      const shaderMaterial = new ShaderMaterial(\n        \"shader\" + mesh.name,\n        scene,\n        {\n          vertexSource: vertexShaderSrc,\n          fragmentSource: fragShaderSrc,\n        },\n        {\n          attributes: [\"position\", \"normal\", \"uv\"],\n          uniforms: [\n            \"world\",\n            \"finalWorld\",\n            \"worldView\",\n            \"worldViewProjection\",\n            \"view\",\n            \"projection\",\n            \"viewProjection\",\n            \"velocity\",\n            \"textureSampler\",\n            \"useGalilean\",\n          ],\n          defines: albedo != null ? [\"#define HAS_TEXTURE\"] : [],\n        }\n      );\n      if (albedo != null) {\n        shaderMaterial.setTexture(\"textureSampler\", albedo);\n      }\n      mesh.material = shaderMaterial;\n      return shaderMaterial;\n    });\n\n  // Register a render loop to repeatedly render the scene\n  engine.runRenderLoop(function () {\n    const { cameraBeta, galilean, useFixedVelocity } = getState();\n    let velocity =\n      camera.velocity == null || useFixedVelocity\n        ? camera.getDirection(Vector3.Forward()).scale(cameraBeta)\n        : camera.velocity;\n    shaders.forEach((shader) => {\n      shader\n        .setVector3(\"velocity\", velocity)\n        .setInt(\"useGalilean\", galilean != null && galilean ? 1 : 0);\n    });\n    scene.render();\n  });\n\n  // Watch for browser/canvas resize events\n  window.addEventListener(\"resize\", function () {\n    engine.resize();\n  });\n  canvas.focus();\n};\n\nmain().catch(console.error);\n"],"sourceRoot":""}