{"version":3,"sources":["webpack://create-wasm-app/./src/canvas-utils.ts","webpack://create-wasm-app/./src/load-text.ts","webpack://create-wasm-app/./src/ui.ts","webpack://create-wasm-app/./src/camera.ts","webpack://create-wasm-app/./src/index.ts"],"names":["loadText","async","url","resp","fetch","ok","Error","statusText","text","saveState","sessionStorage","uiState","JSON","stringify","defaultUiState","cameraBeta","useFixedVelocity","useNoTimeDelay","galilean","simultaneityFrame","getState","parse","initUi","el","slider","document","createElement","type","min","max","step","value","toString","title","createSpeedSlider","addEventListener","e","target","HTMLInputElement","currValue","parseFloat","Number","isNaN","toggle","checked","createFixedSpeedToggle","galileanToggle","createGalileanToggle","sliderLabel","appendChild","append","toggleLabel","galileanLabel","simultaneityPicker","container","noTimeDelayLabel","noTimeDelayToggle","createNoTimeDelayToggle","button1","name","disabled","button1Label","button2","button2Label","onClick","parseInt","onclick","createSimultaneityPicker","uiEl","className","helptext","innerText","RelativisticUniversalCamera","position","scene","super","this","velocity","properVelocity","properAcceleration","dt","onAfterCheckInputsObservable","add","_camera","_eventState","cameraDirection","length","scaleInPlace","Math","exp","inertia","copyFrom","newProperVelocity","scale","maxProperSpeed2","lengthSquared","properSpeed2","invGamma","sqrt","scaleToRef","addInPlace","speed","undefined","maxSpeed2","gamma2","engine","getEngine","getDeltaTime","getFps","setAll","cameraRotation","_checkInputs","body","style","display","flexDirection","canvasContainer","flex","canvas","width","clientWidth","height","clientHeight","tabIndex","window","_e","createCanvas","speedIndicator","classList","initSpeedIndicator","vertexShaderSrc","fragShaderSrc","Promise","all","deterministicLockstep","lockstepMaxSteps","location","href","defaultCameraInfo","getNodeByID","defaultPosition","defaultRotation","rotationQuaternion","camera","keysDownward","push","keysDown","keysUpward","keysUp","keysLeft","keysRight","gamepadAngularSensibility","navigator","userAgent","match","inputs","addVirtualJoystick","minZ","maxZ","fov","initCamera","createCamera","update","setTarget","attachControl","clearColor","set","skipFrustumClipping","shaders","meshes","filter","mesh","map","albedo","material","albedoTexture","shaderMaterial","vertexSource","fragmentSource","attributes","uniforms","defines","setTexture","runRenderLoop","setMaxSpeed","getDirection","forEach","shader","setVector3","setInt","toFixed","render","resize","focus","main","catch","console","error"],"mappings":"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","file":"770.bootstrap.js","sourcesContent":["export const createCanvas = (el: HTMLElement): HTMLCanvasElement => {\n  const canvas = document.createElement(\"canvas\");\n  canvas.style.position = \"absolute\";\n  canvas.width = el.clientWidth;\n  canvas.height = el.clientHeight;\n  canvas.style.position = \"fixed\";\n  canvas.tabIndex = 0;\n\n  window.addEventListener(\"resize\", _e => {\n    canvas.width = el.clientWidth;\n    canvas.height = el.clientHeight;\n  })\n\n  el.appendChild(canvas);\n  return canvas;\n};\n\n/**\n * Create and initialize the canvas and add to the DOM.\n *\n * @param el Element to add the canvas to.\n */\nexport const createGlContext = (\n  canvas: HTMLCanvasElement\n): WebGL2RenderingContext => {\n  const gl = canvas.getContext(\"webgl2\", {\n    antialias: true,\n  });\n\n  if (gl == null) {\n    throw new Error(\"Unable to create WebGL 2 context.\");\n  }\n\n  return gl;\n};\n","/** Load file as a string. */\nexport const loadText = async (url: string) => {\n  const resp = await fetch(url);\n  if (!resp.ok) {\n    throw new Error(resp.statusText);\n  }\n  return resp.text();\n};\n","export const enum SimultaneityFrame {\n  world = 0,\n  camera = 1\n}\n\n/** UI configuration used in this demo. */\nexport type UiState = {\n  /** Fraction of the speed of light the camera is traveling at. */\n  cameraBeta: number;\n  /** Use a fixed velocity as the speed of light. */\n  useFixedVelocity: boolean;\n  /** Don't take into account travel time of light to reach camera. */\n  useNoTimeDelay: boolean;\n  /**\n   * True to transform according to Euclidean space. False for special\n   * relativity.\n   */\n  galilean: boolean;\n  /**\n   * Used with `useNoTimeDelay` to define which frame to use to define\n   * when events are simultaneous.\n   */\n  simultaneityFrame: SimultaneityFrame;\n};\n\n/**\n * Save the state to session storage, which is preserved until the browser is\n * closed.\n */\nconst saveState = () => {\n  sessionStorage.uiState = JSON.stringify(uiState);\n};\n\nconst defaultUiState: UiState = {\n  cameraBeta: 0.95,\n  useFixedVelocity: false,\n  useNoTimeDelay: false,\n  galilean: false,\n  simultaneityFrame: SimultaneityFrame.world\n};\n\nexport const getState = (): UiState => {\n  return sessionStorage.uiState != null\n    ? JSON.parse(sessionStorage.uiState)\n    : defaultUiState;\n};\n\nlet uiState: UiState = getState();\n\nconst createSpeedSlider = () => {\n  const slider = document.createElement(\"input\");\n  slider.type = \"number\";\n  slider.min = \"0\";\n  slider.max = \"1\";\n  slider.step = \"0.005\";\n  slider.value = uiState.cameraBeta?.toString();\n  slider.title =\n    \"Camera speed as a fraction of the speed of light.\"\n  return slider;\n};\n\nconst createFixedSpeedToggle = () => {\n  const toggle = document.createElement(\"input\");\n  toggle.type = \"checkbox\";\n  toggle.checked = uiState.useFixedVelocity;\n  return toggle;\n};\n\nconst createNoTimeDelayToggle = () => {\n  const toggle = document.createElement(\"input\");\n  toggle.type = \"checkbox\";\n  toggle.checked = uiState.useNoTimeDelay;\n  return toggle;\n};\n\nconst createGalileanToggle = () => {\n  const toggle = document.createElement(\"input\");\n  toggle.type = \"checkbox\";\n  toggle.checked = uiState.galilean;\n  return toggle;\n};\n\nconst createSimultaneityPicker = () => {\n  const container = document.createElement(\"div\");\n\n  const noTimeDelayLabel = document.createElement(\"label\");\n  const noTimeDelayToggle = createNoTimeDelayToggle();\n  noTimeDelayLabel.appendChild(noTimeDelayToggle);\n  noTimeDelayLabel.append(\"Assume no light travel time in frame:\")\n  container.appendChild(noTimeDelayLabel);\n\n  const button1 = document.createElement(\"input\");\n  button1.name = \"simultaneity-frame\";\n  button1.type = \"radio\";\n  button1.disabled = !uiState.useNoTimeDelay;\n  button1.checked = uiState.simultaneityFrame === SimultaneityFrame.world;\n  button1.value = `${SimultaneityFrame.world}`;\n  const button1Label = document.createElement(\"label\");\n  button1Label.appendChild(button1);\n  button1Label.append(\"World\");\n\n  const button2 = document.createElement(\"input\");\n  button2.name = \"simultaneity-frame\";\n  button2.type = \"radio\";\n  button2.disabled = !uiState.useNoTimeDelay;\n  button2.checked = uiState.simultaneityFrame === SimultaneityFrame.camera;\n  button2.value = `${SimultaneityFrame.camera}`;\n  const button2Label = document.createElement(\"label\");\n  button2Label.appendChild(button2);\n  button2Label.append(\"Camera\");\n\n  noTimeDelayToggle.addEventListener(\"change\", e => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    const useNoTimeDelay = !!target.checked;\n    uiState.useNoTimeDelay = useNoTimeDelay;\n    saveState();\n\n    button1.disabled = !useNoTimeDelay;\n    button2.disabled = !useNoTimeDelay;\n  });\n\n  const onClick = (e: MouseEvent) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    const value = parseInt(target.value, 10) as SimultaneityFrame;\n    uiState.simultaneityFrame = value;\n    saveState();\n  }\n  button1.onclick = onClick;\n  button2.onclick = onClick;\n\n  container.appendChild(button1Label);\n  container.appendChild(button2Label);\n\n  return container;\n}\n\nexport const initSpeedIndicator = (el: HTMLElement) => {\n  const speedIndicator = document.createElement(\"div\");\n  speedIndicator.classList.add(\"speed-indicator\");\n  el.appendChild(speedIndicator);\n  return speedIndicator;\n}\n\n/** Element to add the UI to. */\nexport const initUi = (el: HTMLElement) => {\n  uiState = getState();\n\n  const slider = createSpeedSlider();\n  slider.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    const currValue = parseFloat(target.value);\n    if (!Number.isNaN(currValue)) {\n      uiState.cameraBeta = currValue;\n      saveState();\n    }\n  });\n\n  const toggle = createFixedSpeedToggle();\n  toggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    const useFixedVelocity = target.checked;\n    uiState.useFixedVelocity = useFixedVelocity;\n    saveState();\n  });\n\n  const galileanToggle = createGalileanToggle();\n  galileanToggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    uiState.galilean = !!target.checked;\n    saveState();\n  })\n\n  const sliderLabel = document.createElement(\"label\");\n  sliderLabel.appendChild(slider);\n  sliderLabel.append(\"Max camera speed (fraction of c)\");\n\n  const toggleLabel = document.createElement(\"label\");\n  toggleLabel.appendChild(toggle);\n  toggleLabel.append(\"Assume fixed camera speed\");\n\n  const galileanLabel = document.createElement(\"label\");\n  galileanLabel.appendChild(galileanToggle);\n  galileanLabel.append(\"Use Galilean relativity\");\n\n  const simultaneityPicker = createSimultaneityPicker();\n\n  const uiEl = document.createElement(\"div\");\n  uiEl.className = \"main-ui\";\n\n  const helptext = document.createElement(\"div\");\n  helptext.innerText = \"Use WASD and mouse to move or touch on smartphone.\"\n  uiEl.appendChild(helptext);\n  uiEl.appendChild(sliderLabel);\n  uiEl.appendChild(simultaneityPicker);\n  uiEl.appendChild(toggleLabel);\n  uiEl.appendChild(galileanLabel);\n  el.appendChild(uiEl);\n};\n","import {\n  Scene,\n  Vector3,\n  Epsilon,\n  UniversalCamera,\n  TargetCamera,\n} from \"@babylonjs/core\";\n\nexport interface RelativisticCamera extends TargetCamera {\n  velocity: Vector3;\n  properVelocity: Vector3;\n  /** Set the max (coordinate) speed. */\n  setMaxSpeed(speed: number | undefined): void;\n}\n\n/**\n * Modifications to the default camera to get smooth acceleration and\n * deceleration. This is necessary to get a smooth velocity.\n *\n * This could probably be replaced with a standard physics integrator.\n */\nclass RelativisticUniversalCamera extends UniversalCamera {\n  velocity: Vector3;\n  properVelocity: Vector3;\n  properAcceleration: Vector3;\n  dt: number;\n\n  maxProperSpeed2: number | undefined;\n\n  public setMaxSpeed(speed: number | undefined) {\n    if (speed == null) {\n      this.maxProperSpeed2 = undefined;\n      return;\n    }\n    const maxSpeed2 = speed * speed;\n    const gamma2 = 1 / (1 - maxSpeed2);\n    this.maxProperSpeed2 = gamma2 * maxSpeed2;\n  }\n\n  constructor(name: string, position: Vector3, scene: Scene) {\n    super(name, position, scene);\n    this.velocity = Vector3.Zero();\n    this.properVelocity = Vector3.Zero();\n    this.properAcceleration = Vector3.Zero();\n    this.dt = 0;\n\n    this.onAfterCheckInputsObservable.add((_camera, _eventState) => {\n      let dt = this.dt;\n      if (this.cameraDirection.length() <= Epsilon) {\n        // Keys are not pressed, so we decelerate. This is hacky, but\n        // I couldn't think of a better way to accelerate to a maximum speed\n        // but also have an inertia at the same time. If I could figure that\n        // out it would hopefully allow a much less ad hoc camera\n        // implementation.\n        this.properVelocity.scaleInPlace(Math.exp(-dt) * this.inertia);\n      } else {\n        // Otherwise, apply constant acceleration.\n        this.properAcceleration.copyFrom(this.cameraDirection);\n\n        // Euler integration step.\n        // It's ok to add the velocities normally here, since the\n        // timestep is small.\n        const newProperVelocity = this.properVelocity.add(\n          this.properAcceleration.scale(dt)\n        );\n        // If a max speed is set, then we should respect it.\n        if (\n          this.maxProperSpeed2 == null ||\n          newProperVelocity.lengthSquared() < this.maxProperSpeed2\n        ) {\n          this.properVelocity.copyFrom(newProperVelocity);\n        }\n      }\n      // Compute the normal velocity from the proper velocity.\n      const properSpeed2 = this.properVelocity.lengthSquared();\n      const invGamma = 1 / Math.sqrt(1 + properSpeed2);\n      this.properVelocity.scaleToRef(invGamma, this.velocity);\n      this.position.addInPlace(this.velocity.scale(dt));\n    });\n  }\n\n  public _computeLocalCameraSpeed() {\n    return this.speed;\n  }\n\n  public _checkInputs() {\n    var engine = this.getEngine();\n    // This is taken from the Babylon JS code. Not sure why it's not just\n    // `getDeltaTime`.\n    this.dt = Math.sqrt(engine.getDeltaTime() / (engine.getFps() * 100.0));\n    // Reset the camera direction.\n    this.cameraDirection.setAll(0);\n    // Smoothly stop rotation when rotation is stopped.\n    this.cameraRotation.scaleInPlace(Math.exp(-this.dt) * this.inertia);\n\n    super._checkInputs();\n  }\n\n  /** Don't allow the default position update. */\n  public _updatePosition() {}\n}\n\n/**\n * Not great check, but used to determine if we should use a virtual\n * joystick or wasd keyboard.\n */\nconst runningSmartphone = () => {\n  return (\n    navigator.userAgent.match(/Android/i) ||\n    navigator.userAgent.match(/iPhone/i)\n  );\n};\n\nconst keyForward = 87;\nconst keyBackward = 83;\nconst keyUp = 69;\nconst keyDown = 81;\nconst keyRight = 68;\nconst keyLeft = 65;\n\nconst initCamera = (camera: RelativisticUniversalCamera) => {\n  // Enable WASD keys for camera control.\n  camera.keysDownward.push(keyDown);\n  camera.keysDown.push(keyBackward);\n  camera.keysUpward.push(keyUp);\n  camera.keysUp.push(keyForward);\n  camera.keysLeft.push(keyLeft);\n  camera.keysRight.push(keyRight);\n  camera.gamepadAngularSensibility = 100;\n  if (runningSmartphone()) {\n    camera.inputs.addVirtualJoystick();\n  }\n\n  camera.speed = 0.5;\n  camera.inertia = 0.9;\n  camera.minZ = 0.1;\n  camera.maxZ = 10000;\n  camera.fov = 0.9;\n};\n\nexport const createCamera = (\n  name: string,\n  position: Vector3,\n  scene: Scene\n): RelativisticCamera => {\n  const camera = new RelativisticUniversalCamera(name, position, scene);\n  initCamera(camera);\n  return camera;\n};\n","import {\n  Effect,\n  Engine,\n  InstancedMesh,\n  PBRMaterial,\n  SceneLoader,\n  ShaderMaterial,\n  TransformNode,\n  Vector3,\n} from \"@babylonjs/core\";\nimport \"@babylonjs/loaders/glTF/2.0\";\nimport { createCanvas } from \"./canvas-utils\";\nimport { loadText } from \"./load-text\";\nimport { getState, initUi, initSpeedIndicator } from \"./ui\";\nimport { createCamera } from \"./camera\";\n\nconst main = async () => {\n  const el = document.body;\n  el.style.display = \"flex\";\n  el.style.flexDirection = \"column\";\n  initUi(el);\n  const canvasContainer = document.createElement(\"div\");\n  canvasContainer.style.flex = \"1 1 auto\";\n  document.body.appendChild(canvasContainer);\n  const canvas = createCanvas(canvasContainer);\n\n  const speedIndicator = initSpeedIndicator(el);\n\n  const [vertexShaderSrc, fragShaderSrc] = await Promise.all([\n    loadText(\"main.vert\"),\n    loadText(\"main.frag\"),\n  ]);\n\n  const engine = new Engine(canvas, true, {\n    deterministicLockstep: true,\n    lockstepMaxSteps: 4,\n  });\n\n  Effect.ShadersStore[\"customVertexShader\"] = vertexShaderSrc;\n\n  Effect.ShadersStore[\"customFragmentShader\"] = fragShaderSrc;\n\n  const scene = await SceneLoader.LoadAsync(\n    window.location.href,\n    \"SubdividedCube.gltf\",\n    engine\n  );\n\n  const defaultCameraInfo = scene.getNodeByID(\"Camera\") as TransformNode;\n  const defaultPosition = defaultCameraInfo?.position || new Vector3(0, 0, -1);\n  const defaultRotation = defaultCameraInfo?.rotationQuaternion;\n\n  const camera = createCamera(\"camera1\", defaultPosition, scene);\n\n  if (defaultRotation != null) {\n    camera.rotationQuaternion = defaultRotation;\n    camera.update();\n  } else {\n    camera.setTarget(Vector3.Zero());\n  }\n  // This attaches the camera to the canvas\n  camera.attachControl(true);\n\n  scene.clearColor.set(0.2, 0.3, 0.6, 1);\n\n  // Need to skip this due to movement of vertices from relativistic\n  // corrections.\n  scene.skipFrustumClipping = true;\n\n  const shaders = scene.meshes\n    .filter((mesh) => !(mesh instanceof InstancedMesh))\n    .map((mesh) => {\n      const material = mesh.material as PBRMaterial;\n      const albedo = material?.albedoTexture;\n\n      const shaderMaterial = new ShaderMaterial(\n        \"shader\" + mesh.name,\n        scene,\n        {\n          vertexSource: vertexShaderSrc,\n          fragmentSource: fragShaderSrc,\n        },\n        {\n          attributes: [\"position\", \"normal\", \"uv\"],\n          uniforms: [\n            \"world\",\n            \"finalWorld\",\n            \"worldView\",\n            \"worldViewProjection\",\n            \"view\",\n            \"projection\",\n            \"viewProjection\",\n            \"velocity\",\n            \"textureSampler\",\n            \"simultaneityFrame\",\n            \"useGalilean\",\n            \"useNoTimeDelay\",\n          ],\n          defines: albedo != null ? [\"#define HAS_TEXTURE\"] : [],\n        }\n      );\n      if (albedo != null) {\n        shaderMaterial.setTexture(\"textureSampler\", albedo);\n      }\n      mesh.material = shaderMaterial;\n      return shaderMaterial;\n    });\n\n  // Register a render loop to repeatedly render the scene\n  engine.runRenderLoop(function () {\n    const {\n      cameraBeta,\n      galilean,\n      simultaneityFrame,\n      useFixedVelocity,\n      useNoTimeDelay,\n    } = getState();\n\n    // Set the maximum allowed speed.\n    camera.setMaxSpeed(cameraBeta);\n\n    let velocity =\n      camera.velocity == null || useFixedVelocity\n        ? camera.getDirection(Vector3.Forward()).scale(cameraBeta)\n        : camera.velocity;\n    shaders.forEach((shader) => {\n      shader\n        .setVector3(\"velocity\", velocity)\n        .setInt(\"useNoTimeDelay\", useNoTimeDelay ? 1 : 0)\n        .setInt(\"simultaneityFrame\", simultaneityFrame)\n        .setInt(\"useGalilean\", galilean != null && galilean ? 1 : 0);\n    });\n\n    // Set the speed indicator in the UI.\n    const speed = velocity.length();\n    speedIndicator.innerText = `Speed: ${speed.toFixed(3)}c`;\n\n    scene.render();\n  });\n\n  // Watch for browser/canvas resize events\n  window.addEventListener(\"resize\", function () {\n    engine.resize();\n  });\n  canvas.focus();\n};\n\nmain().catch(console.error);\n"],"sourceRoot":""}