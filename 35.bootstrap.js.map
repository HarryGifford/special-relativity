{"version":3,"sources":["webpack://sr-frontend/./src/canvas-utils.ts","webpack://sr-frontend/./src/load-text.ts","webpack://sr-frontend/./src/ui.ts","webpack://sr-frontend/./src/camera.ts","webpack://sr-frontend/./src/utils.ts","webpack://sr-frontend/./src/index.ts","webpack://sr-frontend/./src/skybox.ts"],"names":["loadText","async","url","resp","fetch","ok","Error","statusText","text","saveState","sessionStorage","uiState","JSON","stringify","defaultUiState","cameraBeta","useFixedVelocity","useNoTimeDelay","galilean","simultaneityFrame","relativisticBeaming","dopplerEffect","timePulse","getState","parse","createToggle","attributeName","label","toggle","document","createElement","type","checked","addEventListener","e","target","HTMLInputElement","toggleLabel","appendChild","append","createRadioPicker","el","id","options","onChange","buttons","map","value","button","name","String","containerEl","idx","length","labelEl","forEach","onclick","setValue","buttonValue","setDisabled","disabled","getSceneUrl","relativityScene","RelativisticUniversalCamera","position","scene","super","this","velocity","properVelocity","properAcceleration","dt","onAfterCheckInputsObservable","add","_camera","_eventState","copyFrom","cameraDirection","dragCoefficient","drag","normalizeToNew","scale","speed","inertia","Math","sqrt","subtractInPlace","addInPlace","properSpeed2","lengthSquared","maxProperSpeed2","normalize","scaleInPlace","invGamma","scaleToRef","undefined","maxSpeed2","gamma2","pow","engine","getEngine","getDeltaTime","getFps","setAll","cameraRotation","exp","_checkInputs","ticks","Date","getTime","start","setUniforms","shader","data","int","Object","entries","uniformName","uniformValue","setInt","vec3","setVector3","float","setFloat","sceneFilename","slider","min","max","step","inputMode","toString","title","createSpeedSlider","currValue","parseFloat","Number","isNaN","fixedSpeedToggleLabel","galileanToggleLabel","relativisticBeamingToggleLabel","dopplerEffectToggleLabel","timePulseToggleLabel","sliderLabel","simultaneityPicker","createSimultaneityPicker","scenePicker","window","location","reload","createScenePicker","uiEl","className","summaryEl","innerText","helptext","initUi","canvas","style","width","clientWidth","height","clientHeight","tabIndex","_e","createCanvas","speedIndicator","classList","initSpeedIndicator","vertexShaderSrc","fragShaderSrc","Promise","all","defaultCameraInfo","getNodeByID","defaultPosition","defaultRotation","rotationQuaternion","camera","keysDownward","push","keysDown","keysUpward","keysUp","keysLeft","keysRight","gamepadAngularSensibility","navigator","userAgent","match","inputs","addVirtualJoystick","minZ","maxZ","fov","initCamera","createCamera","update","setTarget","attachControl","rgbMapTexture","skipFrustumClipping","shaders","meshes","filter","mesh","material","albedo","albedoTexture","bump","bumpTexture","shaderMaterial","vertexSource","fragmentSource","attributes","uniforms","samplers","defines","setTexture","skyboxMaterial","skybox","size","sideOrientation","infiniteDistance","cubeTexture","coordinatesMode","makeSkybox","runRenderLoop","setMaxSpeed","uniformParams","getDirection","time","useGalilean","getUniformParams","gamma","innerHTML","toFixed","join","render","resize","focus","main","body","catch","console","error"],"mappings":"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","file":"35.bootstrap.js","sourcesContent":["export const createCanvas = (el: HTMLElement): HTMLCanvasElement => {\n  const canvas = document.createElement(\"canvas\");\n  canvas.style.position = \"absolute\";\n  canvas.width = el.clientWidth;\n  canvas.height = el.clientHeight;\n  canvas.style.position = \"fixed\";\n  canvas.tabIndex = 0;\n\n  window.addEventListener(\"resize\", _e => {\n    canvas.width = el.clientWidth;\n    canvas.height = el.clientHeight;\n  })\n\n  el.appendChild(canvas);\n  return canvas;\n};\n\n/**\n * Create and initialize the canvas and add to the DOM.\n *\n * @param el Element to add the canvas to.\n */\nexport const createGlContext = (\n  canvas: HTMLCanvasElement\n): WebGL2RenderingContext => {\n  const gl = canvas.getContext(\"webgl2\", {\n    antialias: true,\n  });\n\n  if (gl == null) {\n    throw new Error(\"Unable to create WebGL 2 context.\");\n  }\n\n  return gl;\n};\n","/** Load file as a string. */\nexport const loadText = async (url: string) => {\n  const resp = await fetch(url);\n  if (!resp.ok) {\n    throw new Error(resp.statusText);\n  }\n  return resp.text();\n};\n","export const enum SimultaneityFrame {\n  world = 0,\n  camera = 1,\n}\n\n/** UI configuration used in this demo. */\nexport type UiState = {\n  /** Fraction of the speed of light the camera is traveling at. */\n  cameraBeta: number;\n  /** Use a fixed velocity as the speed of light. */\n  useFixedVelocity: boolean;\n  /** Don't take into account travel time of light to reach camera. */\n  useNoTimeDelay: boolean;\n  /**\n   * True to transform according to Euclidean space. False for special\n   * relativity.\n   */\n  galilean: boolean;\n  /**\n   * Used with `useNoTimeDelay` to define which frame to use to define\n   * when events are simultaneous.\n   */\n  simultaneityFrame: SimultaneityFrame;\n  /** Set to true to enable relativistic beaming. */\n  relativisticBeaming: boolean;\n  /** Set to true to doppler shift the wavelength of light. */\n  dopplerEffect: boolean;\n  /** Set to true to show a time pulse. */\n  timePulse: boolean;\n};\n\nconst diceUrl = \"SubdividedCube.gltf\";\nconst sponzaUrl =\n  \"https://specialrelativitymeshes.z5.web.core.windows.net/Sponza/sponza.gltf\";\n\n/**\n * Save the state to session storage, which is preserved until the browser is\n * closed.\n */\nconst saveState = () => {\n  sessionStorage.uiState = JSON.stringify(uiState);\n};\n\nconst defaultUiState: UiState = {\n  cameraBeta: 0.95,\n  useFixedVelocity: false,\n  useNoTimeDelay: false,\n  galilean: false,\n  simultaneityFrame: SimultaneityFrame.camera,\n  relativisticBeaming: false,\n  dopplerEffect: false,\n  timePulse: false,\n};\n\nexport const getState = (): UiState => {\n  return sessionStorage.uiState != null\n    ? JSON.parse(sessionStorage.uiState)\n    : defaultUiState;\n};\n\nlet uiState: UiState = getState();\n\nconst createSpeedSlider = () => {\n  const slider = document.createElement(\"input\");\n  slider.type = \"number\";\n  slider.min = \"0\";\n  slider.max = \"1\";\n  slider.step = \"0.005\";\n  slider.inputMode = \"decimal\";\n  slider.value = uiState.cameraBeta?.toString();\n  slider.title = \"Camera speed as a fraction of the speed of light.\";\n  return slider;\n};\n\ntype FilterPropertiesByType<T, U> = {\n  [K in keyof T as T[K] extends U ? K : never]: T[K];\n};\n\n/** UiState keys that are booleans. */\ntype BooleanUiKeys = keyof FilterPropertiesByType<UiState, boolean>;\n\ntype ToggleProps = {\n  attributeName: BooleanUiKeys;\n  label: string;\n};\n\nconst createToggle = ({ attributeName, label }: ToggleProps) => {\n  const toggle = document.createElement(\"input\");\n  toggle.type = \"checkbox\";\n  toggle.checked = uiState[attributeName];\n  toggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    uiState[attributeName] = !!target.checked;\n    saveState();\n  });\n  const toggleLabel = document.createElement(\"label\");\n  toggleLabel.appendChild(toggle);\n  toggleLabel.append(label);\n  return {\n    toggleLabel,\n    toggle,\n  };\n};\n\ntype PickerOption<T> = {\n  label: string;\n  value: T;\n};\n\ntype Picker<T> = {\n  el: HTMLElement;\n  id: string;\n  options: PickerOption<T>[];\n  onChange?: (value: T) => void;\n};\n\nconst createRadioPicker = <T>({ el, id, options, onChange }: Picker<T>) => {\n  const buttons = options.map(({ value }) => {\n    const button = document.createElement(\"input\");\n    button.name = id;\n    button.type = \"radio\";\n    button.value = String(value);\n    return button;\n  });\n\n  const containerEl = el;\n  for (let idx = 0; idx < options.length; idx++) {\n    const labelEl = document.createElement(\"label\");\n    labelEl.appendChild(buttons[idx]);\n    labelEl.append(options[idx].label);\n    containerEl.append(labelEl);\n  }\n\n  const setValue = (value: T) => {\n    for (let idx = 0; idx < options.length; idx++) {\n      const { value: buttonValue } = options[idx];\n      const button = buttons[idx];\n      button.checked = buttonValue === value;\n    }\n  };\n\n  const setDisabled = (disabled: boolean) => {\n    for (let idx = 0; idx < options.length; idx++) {\n      const button = buttons[idx];\n      button.disabled = disabled;\n    }\n  };\n\n  onChange != null &&\n    buttons.forEach((button, idx) => {\n      const value = options[idx].value;\n      button.onclick = () => {\n        onChange(value);\n      };\n    });\n\n  return {\n    buttons,\n    setValue,\n    setDisabled,\n  };\n};\n\nconst createSimultaneityPicker = () => {\n  const containerEl = document.createElement(\"div\");\n  const { toggle, toggleLabel } = createToggle({\n    attributeName: \"useNoTimeDelay\",\n    label: \"Assume no light travel time in frame:\",\n  });\n  toggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    const useNoTimeDelay = !!target.checked;\n    setDisabled(!useNoTimeDelay);\n  });\n  containerEl.appendChild(toggleLabel);\n  const { setValue, setDisabled } = createRadioPicker({\n    el: containerEl,\n    id: \"simultaneity-frame\",\n    options: [\n      {\n        label: \"Camera\",\n        value: SimultaneityFrame.camera,\n      },\n      {\n        label: \"World\",\n        value: SimultaneityFrame.world,\n      },\n    ],\n    onChange: (value) => {\n      uiState.simultaneityFrame = value;\n      saveState();\n    },\n  });\n  setValue(uiState.simultaneityFrame);\n  setDisabled(!uiState.useNoTimeDelay);\n  return containerEl;\n};\n\nexport const getSceneUrl = (): string => {\n  return sessionStorage.relativityScene || \"SubdividedCube.gltf\";\n};\n\nconst createScenePicker = () => {\n  const containerEl = document.createElement(\"div\");\n  const label = document.createElement(\"label\");\n  label.append(\"Scene:\");\n  containerEl.appendChild(label);\n  const { setValue } = createRadioPicker<string>({\n    el: containerEl,\n    id: \"scene-picker\",\n    options: [\n      {\n        label: \"Dice\",\n        value: diceUrl,\n      },\n      {\n        label: \"Sponza\",\n        value: sponzaUrl,\n      },\n    ],\n    onChange: (value) => {\n      sessionStorage.relativityScene = value;\n      // Reload the browser for simplicity.\n      window.location.reload();\n    },\n  });\n  setValue(getSceneUrl());\n  return containerEl;\n};\n\nexport const initSpeedIndicator = (el: HTMLElement) => {\n  const speedIndicator = document.createElement(\"div\");\n  speedIndicator.classList.add(\"speed-indicator\");\n  el.appendChild(speedIndicator);\n  return speedIndicator;\n};\n\n/** Element to add the UI to. */\nexport const initUi = (el: HTMLElement) => {\n  uiState = getState();\n\n  const slider = createSpeedSlider();\n  slider.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    const currValue = parseFloat(target.value);\n    if (!Number.isNaN(currValue)) {\n      uiState.cameraBeta = currValue;\n      saveState();\n    }\n  });\n\n  const { toggleLabel: fixedSpeedToggleLabel } = createToggle({\n    attributeName: \"useFixedVelocity\",\n    label: \"Assume fixed camera speed\",\n  });\n\n  const { toggleLabel: galileanToggleLabel } = createToggle({\n    attributeName: \"galilean\",\n    label: \"Use Galilean relativity\",\n  });\n\n  const { toggleLabel: relativisticBeamingToggleLabel } = createToggle({\n    attributeName: \"relativisticBeaming\",\n    label: \"Relativistic beaming\",\n  });\n\n  const { toggleLabel: dopplerEffectToggleLabel } = createToggle({\n    attributeName: \"dopplerEffect\",\n    label: \"Doppler effect\",\n  });\n\n  const { toggleLabel: timePulseToggleLabel } = createToggle({\n    attributeName: \"timePulse\",\n    label: \"Show synchronization\",\n  });\n\n  const sliderLabel = document.createElement(\"label\");\n  sliderLabel.appendChild(slider);\n  sliderLabel.append(\"Max camera speed (fraction of c)\");\n\n  const simultaneityPicker = createSimultaneityPicker();\n  const scenePicker = createScenePicker();\n\n  const uiEl = document.createElement(\"details\");\n  uiEl.className = \"main-ui\";\n  const summaryEl = document.createElement(\"summary\");\n  summaryEl.innerText = \"Help / Settings\";\n  uiEl.appendChild(summaryEl);\n\n  const helptext = document.createElement(\"div\");\n  helptext.innerText = \"Use WASD and mouse to move or touch on smartphone.\";\n  uiEl.appendChild(helptext);\n  uiEl.appendChild(sliderLabel);\n  uiEl.appendChild(relativisticBeamingToggleLabel);\n  uiEl.appendChild(dopplerEffectToggleLabel);\n  uiEl.appendChild(simultaneityPicker);\n  uiEl.appendChild(timePulseToggleLabel);\n  uiEl.appendChild(galileanToggleLabel);\n  uiEl.appendChild(fixedSpeedToggleLabel);\n  uiEl.appendChild(scenePicker);\n  el.appendChild(uiEl);\n};\n","import {\n  Scene,\n  Vector3,\n  Epsilon,\n  UniversalCamera,\n  TargetCamera,\n} from \"@babylonjs/core\";\n\nexport interface RelativisticCamera extends TargetCamera {\n  velocity: Vector3;\n  properVelocity: Vector3;\n  /** Set the max (coordinate) speed. */\n  setMaxSpeed(speed: number | undefined): void;\n}\n\n/**\n * Modifications to the default camera to get smooth acceleration and\n * deceleration. This is necessary to get a smooth velocity.\n *\n * This could probably be replaced with a standard physics integrator.\n */\nclass RelativisticUniversalCamera extends UniversalCamera {\n  velocity: Vector3;\n  properVelocity: Vector3;\n  properAcceleration: Vector3;\n  dt: number;\n\n  maxProperSpeed2: number | undefined;\n  dragCoefficient: number | undefined;\n\n  public setMaxSpeed(speed: number | undefined) {\n    if (speed == null) {\n      this.maxProperSpeed2 = undefined;\n      this.dragCoefficient = 0;\n      return;\n    }\n    this.speed = speed;\n    const maxSpeed2 = speed * speed;\n    const gamma2 = maxSpeed2 < 1 ? 1 / (1 - maxSpeed2) : 10000;\n    this.maxProperSpeed2 = gamma2 * maxSpeed2;\n    this.dragCoefficient = 1 / Math.pow(this.maxProperSpeed2, 1 / 4);\n  }\n\n  constructor(name: string, position: Vector3, scene: Scene) {\n    super(name, position, scene);\n    this.velocity = Vector3.Zero();\n    this.properVelocity = Vector3.Zero();\n    this.properAcceleration = Vector3.Zero();\n    this.dt = 0;\n\n    this.onAfterCheckInputsObservable.add((_camera, _eventState) => {\n      let dt = this.dt;\n      // Apply acceleration with a drag term.\n      this.properAcceleration.copyFrom(this.cameraDirection);\n      const dragCoefficient = this.dragCoefficient ?? 0;\n      // Scaling the drag factor by the sqrt of the velocity is arbitrary\n      // and I just did it because it's cleaner. If you change it then\n      // you also need to change the drag coefficient. If below were\n      // pow(x, 1/3) then above would be `pow(maxProperSpeed, 1/2*1/3).\n      const drag = this.properVelocity\n        .normalizeToNew()\n        .scale(\n          dragCoefficient *\n            this.speed *\n            this.inertia *\n            Math.sqrt(this.properVelocity.length())\n        );\n      this.properAcceleration.subtractInPlace(drag);\n\n      // Euler integration step.\n      this.properVelocity.addInPlace(this.properAcceleration.scale(dt));\n      // Compute the normal velocity from the proper velocity.\n      let properSpeed2 = this.properVelocity.lengthSquared();\n      // If a max speed is set, then we should respect it.\n      if (this.maxProperSpeed2 != null && properSpeed2 > this.maxProperSpeed2) {\n        this.properVelocity\n          .normalize()\n          .scaleInPlace(Math.sqrt(this.maxProperSpeed2));\n        properSpeed2 = this.maxProperSpeed2;\n      }\n      const invGamma = 1 / Math.sqrt(1 + properSpeed2);\n      this.properVelocity.scaleToRef(invGamma, this.velocity);\n      this.position.addInPlace(this.velocity.scale(dt));\n    });\n  }\n\n  public _computeLocalCameraSpeed() {\n    return this.speed;\n  }\n\n  public _checkInputs() {\n    var engine = this.getEngine();\n    // This is taken from the Babylon JS code. Not sure why it's not just\n    // `getDeltaTime`.\n    this.dt = Math.sqrt(engine.getDeltaTime() / (engine.getFps() * 100.0));\n    // Don't allow the timestep to get too large, so clamp it.\n    if (this.dt > 0.1) {\n      this.dt = 0.1;\n    }\n    // Reset the camera direction.\n    this.cameraDirection.setAll(0);\n    // Smoothly stop rotation when rotation is stopped.\n    this.cameraRotation.scaleInPlace(Math.exp(-this.dt) * this.inertia);\n\n    super._checkInputs();\n  }\n\n  /** Don't allow the default position update. */\n  public _updatePosition() {}\n}\n\n/**\n * Not great check, but used to determine if we should use a virtual\n * joystick or wasd keyboard.\n */\nconst runningSmartphone = () => {\n  return (\n    navigator.userAgent.match(/Android/i) ||\n    navigator.userAgent.match(/iPhone/i)\n  );\n};\n\nconst keyForward = 87;\nconst keyBackward = 83;\nconst keyUp = 69;\nconst keyDown = 81;\nconst keyRight = 68;\nconst keyLeft = 65;\n\nconst initCamera = (camera: RelativisticUniversalCamera) => {\n  // Enable WASD keys for camera control.\n  camera.keysDownward.push(keyDown);\n  camera.keysDown.push(keyBackward);\n  camera.keysUpward.push(keyUp);\n  camera.keysUp.push(keyForward);\n  camera.keysLeft.push(keyLeft);\n  camera.keysRight.push(keyRight);\n  camera.gamepadAngularSensibility = 100;\n  if (runningSmartphone()) {\n    camera.inputs.addVirtualJoystick();\n  }\n\n  camera.speed = 1.0;\n  camera.inertia = 0.9;\n  camera.minZ = 0.1;\n  camera.maxZ = 10000;\n  camera.fov = 0.9;\n};\n\nexport const createCamera = (\n  name: string,\n  position: Vector3,\n  scene: Scene\n): RelativisticCamera => {\n  const camera = new RelativisticUniversalCamera(name, position, scene);\n  initCamera(camera);\n  return camera;\n};\n","import { ShaderMaterial, Vector3 } from \"@babylonjs/core\";\nimport { RelativisticCamera } from \"./camera\";\nimport { getState } from \"./ui\";\n\nexport type UniformParams = {\n  int?: Record<string, number>;\n  float?: Record<string, number>;\n  vec3?: Record<string, Vector3>;\n};\n\nconst ticks = () => {\n  return new Date().getTime();\n}\n\nconst start = ticks();\n\n/**\n * Get uniform parameters for shader from UI and camera.\n */\nexport const getUniformParams = (camera: RelativisticCamera) => {\n  const {\n    cameraBeta,\n    galilean,\n    simultaneityFrame,\n    useFixedVelocity,\n    useNoTimeDelay,\n    relativisticBeaming,\n    dopplerEffect,\n    timePulse\n  } = getState();\n  const velocity =\n    camera.velocity == null || useFixedVelocity\n      ? camera.getDirection(Vector3.Forward()).scale(cameraBeta)\n      : camera.velocity;\n  return {\n    vec3: {\n      velocity,\n    },\n    float: {\n      time: (ticks() - start)/1000\n    },\n    int: {\n      useNoTimeDelay: useNoTimeDelay ? 1 : 0,\n      simultaneityFrame,\n      useGalilean: galilean ? 1 : 0,\n      relativisticBeaming: relativisticBeaming ? 1 : 0,\n      dopplerEffect: dopplerEffect ? 1 : 0,\n      timePulse: timePulse ? 1 : 0\n    },\n  };\n};\n\n/** Convenience function for setting a bunch of uniforms on a shader. */\nexport const setUniforms = (shader: ShaderMaterial, data: UniformParams) => {\n  if (data.int != null) {\n    Object.entries(data.int).forEach(([uniformName, uniformValue]) => {\n      shader.setInt(uniformName, uniformValue);\n    });\n  }\n  if (data.vec3 != null) {\n    Object.entries(data.vec3).forEach(([uniformName, uniformValue]) => {\n      shader.setVector3(uniformName, uniformValue);\n    });\n  }\n  if (data.float != null) {\n    Object.entries(data.float).forEach(([uniformName, uniformValue]) => {\n      shader.setFloat(uniformName, uniformValue);\n    });\n  }\n};\n","import {\n  Effect,\n  Engine,\n  InstancedMesh,\n  PBRMaterial,\n  SceneLoader,\n  ShaderMaterial,\n  TransformNode,\n  Vector3,\n  Texture,\n} from \"@babylonjs/core\";\nimport \"@babylonjs/loaders/glTF/2.0\";\nimport { createCanvas } from \"./canvas-utils\";\nimport { loadText } from \"./load-text\";\nimport { getState, initUi, initSpeedIndicator, getSceneUrl } from \"./ui\";\nimport { createCamera } from \"./camera\";\nimport { makeSkybox } from \"./skybox\";\nimport { getUniformParams, setUniforms } from \"./utils\";\n\ntype Config = {\n  el: HTMLElement;\n  sceneFilename: string;\n};\n\nconst main = async ({ el, sceneFilename }: Config) => {\n  initUi(el);\n  const canvas = createCanvas(el);\n\n  const speedIndicator = initSpeedIndicator(el);\n\n  const [vertexShaderSrc, fragShaderSrc] = await Promise.all([\n    loadText(\"main.vert\"),\n    loadText(\"main.frag\"),\n  ]);\n\n  const engine = new Engine(canvas, true);\n\n  Effect.ShadersStore[\"customVertexShader\"] = vertexShaderSrc;\n\n  Effect.ShadersStore[\"customFragmentShader\"] = fragShaderSrc;\n\n  const scene = await SceneLoader.LoadAsync(sceneFilename);\n\n  const defaultCameraInfo = scene.getNodeByID(\"Camera\") as TransformNode;\n  const defaultPosition =\n    defaultCameraInfo?.position || new Vector3(0, 0.33, -9);\n  const defaultRotation = defaultCameraInfo?.rotationQuaternion;\n\n  const camera = createCamera(\"camera1\", defaultPosition, scene);\n\n  if (defaultRotation != null) {\n    camera.rotationQuaternion = defaultRotation;\n    camera.update();\n  } else {\n    camera.setTarget(Vector3.Zero());\n  }\n  // This attaches the camera to the canvas\n  camera.attachControl(true);\n\n  const rgbMapTexture = new Texture(\n    \"./lambda_rgb_map.png\",\n    scene,\n    false,\n    undefined,\n    Texture.BILINEAR_SAMPLINGMODE\n  );\n\n  // Need to skip this due to movement of vertices from relativistic\n  // corrections.\n  scene.skipFrustumClipping = true;\n\n  const shaders = scene.meshes\n    .filter((mesh) => !(mesh instanceof InstancedMesh) && mesh.material != null)\n    .map((mesh) => {\n      const material = mesh.material as PBRMaterial;\n      if (material == null) {\n        throw new Error(\"Material should not be null\");\n      }\n      const albedo = material.albedoTexture;\n      const bump = material.bumpTexture;\n\n      const shaderMaterial = new ShaderMaterial(\n        \"shader\" + mesh.name,\n        scene,\n        {\n          vertexSource: vertexShaderSrc,\n          fragmentSource: fragShaderSrc,\n        },\n        {\n          attributes: [\"position\", \"normal\", \"tangent\", \"uv\"],\n          uniforms: [\n            \"world\",\n            \"finalWorld\",\n            \"view\",\n            \"projection\",\n            \"velocity\",\n            \"simultaneityFrame\",\n            \"useGalilean\",\n            \"useNoTimeDelay\",\n            \"dopplerEffect\",\n            \"relativisticBeaming\",\n            \"time\",\n            \"timePulse\"\n          ],\n          samplers: [\"albedoSampler\", \"bumpSampler\", \"rgbMapSampler\"],\n          defines: bump != null ? [\"#define TANGENT\"] : [],\n        }\n      );\n      shaderMaterial.setTexture(\"rgbMapSampler\", rgbMapTexture);\n      if (albedo != null) {\n        shaderMaterial.setTexture(\"albedoSampler\", albedo);\n      }\n      if (bump != null) {\n        shaderMaterial.setTexture(\"bumpSampler\", bump);\n      }\n      mesh.material = shaderMaterial;\n      return shaderMaterial;\n    });\n\n  // Skybox is used so that we correctly shade the environment at infinity.\n  const { skyboxMaterial } = await makeSkybox(scene);\n  skyboxMaterial.setTexture(\"rgbMapSampler\", rgbMapTexture);\n\n  // Register a render loop to repeatedly render the scene\n  engine.runRenderLoop(function () {\n    const { cameraBeta } = getState();\n    // Set the maximum allowed speed.\n    camera.setMaxSpeed(cameraBeta);\n    const uniformParams = getUniformParams(camera);\n    setUniforms(skyboxMaterial, uniformParams);\n    shaders.forEach((shader) => {\n      setUniforms(shader!, uniformParams);\n    });\n\n    const velocity = uniformParams.vec3.velocity;\n    // Set the speed indicator in the UI.\n    const speed = velocity.length();\n    const gamma = 1 / Math.sqrt(1 - speed * speed);\n    speedIndicator.innerHTML = [\n      `Speed: ${speed.toFixed(3)}c`,\n      `Gamma: ${gamma.toFixed(3)}`,\n    ].join(\"<br/>\");\n\n    scene.render();\n  });\n\n  // Watch for browser/canvas resize events\n  window.addEventListener(\"resize\", function () {\n    engine.resize();\n  });\n  canvas.focus();\n};\n\nmain({\n  el: document.body,\n  sceneFilename: getSceneUrl(),\n}).catch(console.error);\n","import {\n  ShaderMaterial,\n  Texture,\n  CubeTexture,\n  Scene,\n  MeshBuilder,\n  Mesh\n} from \"@babylonjs/core\";\nimport { loadText } from \"./load-text\";\n\nexport const makeSkybox = async (scene: Scene) => {\n  const skybox = MeshBuilder.CreateBox(\"skybox\", {\n    size: 1000,\n    sideOrientation: Mesh.BACKSIDE,\n  });\n  const [vertexShaderSrc, fragShaderSrc] = await Promise.all([\n    loadText(\"skybox.vert\"),\n    loadText(\"main.frag\"),\n  ]);\n  const skyboxMaterial = new ShaderMaterial(\n    \"skybox\",\n    scene,\n    {\n      vertexSource: vertexShaderSrc,\n      fragmentSource: fragShaderSrc,\n    },\n    {\n      attributes: [\"position\", \"normal\", \"uv\"],\n      uniforms: [\n        \"view\",\n        \"projection\",\n        \"velocity\",\n        \"simultaneityFrame\",\n        \"useGalilean\",\n        \"useNoTimeDelay\",\n        \"dopplerEffect\",\n        \"relativisticBeaming\",\n      ],\n      samplers: [\n        \"skyboxSampler\",\n        \"rgbMapSampler\",\n      ],\n      defines: [\"#define SKYBOX\"]\n    },\n  );\n  skybox.infiniteDistance = true;\n  skybox.material = skyboxMaterial;\n  const cubeTexture = new CubeTexture(\"skybox/skybox\", scene, [\n    \"_px.png\",\n    \"_py.png\",\n    \"_pz.png\",\n    \"_nx.png\",\n    \"_ny.png\",\n    \"_nz.png\",\n  ]);\n  cubeTexture.coordinatesMode = Texture.SKYBOX_MODE;\n  skyboxMaterial.setTexture(\"skyboxSampler\", cubeTexture);\n  return {\n    skybox,\n    skyboxMaterial,\n    cubeTexture,\n  };\n};\n"],"sourceRoot":""}