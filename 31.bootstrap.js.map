{"version":3,"sources":["webpack://sr-frontend/./src/canvas-utils.ts","webpack://sr-frontend/./src/load-text.ts","webpack://sr-frontend/./src/ui.ts","webpack://sr-frontend/./src/camera.ts","webpack://sr-frontend/./src/utils.ts","webpack://sr-frontend/./src/shaders.ts","webpack://sr-frontend/./src/index.ts","webpack://sr-frontend/./src/skybox.ts"],"names":["loadText","async","url","resp","fetch","ok","Error","statusText","text","diceUrl","defaultUiState","cameraBeta","useFixedVelocity","useNoTimeDelay","galilean","simultaneityFrame","relativisticBeaming","dopplerEffect","timePulse","getState","sessionStorage","uiState","JSON","parse","createToggle","attributeName","label","save","toggle","document","createElement","type","checked","addEventListener","e","target","HTMLInputElement","toggleLabel","appendChild","append","createRadioPicker","el","id","options","onChange","buttons","map","value","button","name","String","containerEl","idx","length","labelEl","forEach","onclick","setValue","buttonValue","setDisabled","disabled","getSceneUrl","relativityScene","RelativisticUniversalCamera","position","scene","super","this","velocity","properVelocity","properAcceleration","dt","onAfterCheckInputsObservable","add","_camera","_eventState","copyFrom","cameraDirection","dragCoefficient","drag","normalizeToNew","scale","speed","inertia","Math","sqrt","subtractInPlace","addInPlace","properSpeed2","lengthSquared","maxProperSpeed2","normalize","scaleInPlace","invGamma","scaleToRef","undefined","maxSpeed2","gamma2","pow","engine","getEngine","getDeltaTime","getFps","setAll","cameraRotation","exp","_checkInputs","ticks","Date","getTime","start","definesFromUiState","setUniforms","shader","data","int","Object","entries","uniformName","uniformValue","setInt","vec3","setVector3","float","setFloat","updateShaderMaterial","rgbMapTexture","material","mesh","userDefines","samplers","defines","albedoTexture","push","bumpTexture","isVerticesDataPresent","metallicTexture","reflectionTexture","shaderMaterial","vertex","fragment","attributes","uniforms","keys","texture","setTexture","uniformParams","metallic","roughness","updateShaderUniforms","dispose","sceneFilename","canvas","style","width","clientWidth","height","clientHeight","tabIndex","window","_e","createCanvas","speedIndicator","classList","initSpeedIndicator","vertexSource","fragmentSource","Promise","all","directionalLights","lights","filter","light","intensity","defaultCameraInfo","cameras","defaultPosition","globalPosition","defaultRotation","absoluteRotation","removeCamera","camera","keysDownward","keysDown","keysUpward","keysUp","keysLeft","keysRight","gamepadAngularSensibility","navigator","userAgent","match","inputs","addVirtualJoystick","minZ","maxZ","fov","initCamera","createCamera","activeCamera","rotationQuaternion","setTarget","getFrontPosition","attachControl","skipFrustumClipping","cubeTexture","coordinatesMode","createDefaultEnvironment","environmentTexture","createGround","skyboxSize","groundSize","skyboxTexture","initSkybox","definesChange","uniformsChange","validMeshes","meshes","materials","i","initShaders","onStateChange","stringify","slider","min","max","step","inputMode","toString","title","createSpeedSlider","currValue","parseFloat","Number","isNaN","fixedSpeedToggleLabel","galileanToggleLabel","relativisticBeamingToggleLabel","dopplerEffectToggleLabel","timePulseToggleLabel","sliderLabel","simultaneityPicker","saveState","createSimultaneityPicker","scenePicker","location","reload","createScenePicker","uiEl","className","summaryEl","innerText","helptext","initUi","onBeginFrameObservable","addOnce","runRenderLoop","setMaxSpeed","getDirection","gamma","computeTransformedInformation","lightDir","transformedDirection","direction","time","useGalilean","getUniformParams","innerHTML","toFixed","join","render","resize","focus","main","body","catch","console","error"],"mappings":"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","file":"31.bootstrap.js","sourcesContent":["export const createCanvas = (el: HTMLElement): HTMLCanvasElement => {\n  const canvas = document.createElement(\"canvas\");\n  canvas.style.position = \"absolute\";\n  canvas.width = el.clientWidth;\n  canvas.height = el.clientHeight;\n  canvas.style.position = \"fixed\";\n  canvas.tabIndex = 0;\n\n  window.addEventListener(\"resize\", _e => {\n    canvas.width = el.clientWidth;\n    canvas.height = el.clientHeight;\n  })\n\n  el.appendChild(canvas);\n  return canvas;\n};\n\n/**\n * Create and initialize the canvas and add to the DOM.\n *\n * @param el Element to add the canvas to.\n */\nexport const createGlContext = (\n  canvas: HTMLCanvasElement\n): WebGL2RenderingContext => {\n  const gl = canvas.getContext(\"webgl2\", {\n    antialias: true,\n  });\n\n  if (gl == null) {\n    throw new Error(\"Unable to create WebGL 2 context.\");\n  }\n\n  return gl;\n};\n","/** Load file as a string. */\nexport const loadText = async (url: string) => {\n  const resp = await fetch(url);\n  if (!resp.ok) {\n    throw new Error(resp.statusText);\n  }\n  return resp.text();\n};\n","export const enum SimultaneityFrame {\n  world = 0,\n  camera = 1,\n}\n\n/** UI configuration used in this demo. */\nexport type UiState = {\n  /** Fraction of the speed of light the camera is traveling at. */\n  cameraBeta: number;\n  /** Use a fixed velocity as the speed of light. */\n  useFixedVelocity: boolean;\n  /** Don't take into account travel time of light to reach camera. */\n  useNoTimeDelay: boolean;\n  /**\n   * True to transform according to Euclidean space. False for special\n   * relativity.\n   */\n  galilean: boolean;\n  /**\n   * Used with `useNoTimeDelay` to define which frame to use to define\n   * when events are simultaneous.\n   */\n  simultaneityFrame: SimultaneityFrame;\n  /** Set to true to enable relativistic beaming. */\n  relativisticBeaming: boolean;\n  /** Set to true to doppler shift the wavelength of light. */\n  dopplerEffect: boolean;\n  /** Set to true to show a time pulse. */\n  timePulse: boolean;\n};\n\nconst diceUrl = \"dice.gltf\";\nconst sponzaUrl =\n  \"https://specialrelativitymeshes.z5.web.core.windows.net/Sponza/sponza.gltf\";\n\n/**\n * Save the state to session storage, which is preserved until the browser is\n * closed.\n */\nconst saveState = () => {\n  sessionStorage.uiState = JSON.stringify(uiState);\n};\n\nconst defaultUiState: UiState = {\n  cameraBeta: 0.95,\n  useFixedVelocity: false,\n  useNoTimeDelay: false,\n  galilean: false,\n  simultaneityFrame: SimultaneityFrame.camera,\n  relativisticBeaming: false,\n  dopplerEffect: false,\n  timePulse: false,\n};\n\nexport const getState = (): UiState => {\n  return sessionStorage.uiState != null\n    ? JSON.parse(sessionStorage.uiState)\n    : defaultUiState;\n};\n\nlet uiState: UiState = getState();\n\nconst createSpeedSlider = () => {\n  const slider = document.createElement(\"input\");\n  slider.type = \"number\";\n  slider.min = \"0\";\n  slider.max = \"1\";\n  slider.step = \"0.005\";\n  slider.inputMode = \"decimal\";\n  slider.value = uiState.cameraBeta?.toString();\n  slider.title = \"Camera speed as a fraction of the speed of light.\";\n  return slider;\n};\n\ntype FilterPropertiesByType<T, U> = {\n  [K in keyof T as T[K] extends U ? K : never]: T[K];\n};\n\n/** UiState keys that are booleans. */\ntype BooleanUiKeys = keyof FilterPropertiesByType<UiState, boolean>;\n\ntype ToggleProps = {\n  attributeName: BooleanUiKeys;\n  label: string;\n  save: () => void;\n};\n\nconst createToggle = ({ attributeName, label, save }: ToggleProps) => {\n  const toggle = document.createElement(\"input\");\n  toggle.type = \"checkbox\";\n  toggle.checked = uiState[attributeName];\n  toggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    uiState[attributeName] = !!target.checked;\n    save();\n  });\n  const toggleLabel = document.createElement(\"label\");\n  toggleLabel.appendChild(toggle);\n  toggleLabel.append(label);\n  return {\n    toggleLabel,\n    toggle,\n  };\n};\n\ntype PickerOption<T> = {\n  label: string;\n  value: T;\n};\n\ntype Picker<T> = {\n  el: HTMLElement;\n  id: string;\n  options: PickerOption<T>[];\n  onChange?: (value: T) => void;\n};\n\nconst createRadioPicker = <T>({ el, id, options, onChange }: Picker<T>) => {\n  const buttons = options.map(({ value }) => {\n    const button = document.createElement(\"input\");\n    button.name = id;\n    button.type = \"radio\";\n    button.value = String(value);\n    return button;\n  });\n\n  const containerEl = el;\n  for (let idx = 0; idx < options.length; idx++) {\n    const labelEl = document.createElement(\"label\");\n    labelEl.appendChild(buttons[idx]);\n    labelEl.append(options[idx].label);\n    containerEl.append(labelEl);\n  }\n\n  const setValue = (value: T) => {\n    for (let idx = 0; idx < options.length; idx++) {\n      const { value: buttonValue } = options[idx];\n      const button = buttons[idx];\n      button.checked = buttonValue === value;\n    }\n  };\n\n  const setDisabled = (disabled: boolean) => {\n    for (let idx = 0; idx < options.length; idx++) {\n      const button = buttons[idx];\n      button.disabled = disabled;\n    }\n  };\n\n  onChange != null &&\n    buttons.forEach((button, idx) => {\n      const value = options[idx].value;\n      button.onclick = () => {\n        onChange(value);\n      };\n    });\n\n  return {\n    buttons,\n    setValue,\n    setDisabled,\n  };\n};\n\nconst createSimultaneityPicker = (saveState: () => void) => {\n  const containerEl = document.createElement(\"div\");\n  const { toggle, toggleLabel } = createToggle({\n    attributeName: \"useNoTimeDelay\",\n    label: \"Assume no light travel time in frame:\",\n    save: saveState,\n  });\n  toggle.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    const useNoTimeDelay = !!target.checked;\n    setDisabled(!useNoTimeDelay);\n  });\n  containerEl.appendChild(toggleLabel);\n  const { setValue, setDisabled } = createRadioPicker({\n    el: containerEl,\n    id: \"simultaneity-frame\",\n    options: [\n      {\n        label: \"Camera\",\n        value: SimultaneityFrame.camera,\n      },\n      {\n        label: \"World\",\n        value: SimultaneityFrame.world,\n      },\n    ],\n    onChange: (value) => {\n      uiState.simultaneityFrame = value;\n      saveState();\n    },\n  });\n  setValue(uiState.simultaneityFrame);\n  setDisabled(!uiState.useNoTimeDelay);\n  return containerEl;\n};\n\nexport const getSceneUrl = (): string => {\n  return sessionStorage.relativityScene || diceUrl;\n};\n\nconst createScenePicker = () => {\n  const containerEl = document.createElement(\"div\");\n  const label = document.createElement(\"label\");\n  label.append(\"Scene:\");\n  containerEl.appendChild(label);\n  const { setValue } = createRadioPicker<string>({\n    el: containerEl,\n    id: \"scene-picker\",\n    options: [\n      {\n        label: \"Dice\",\n        value: diceUrl,\n      },\n      {\n        label: \"Sponza\",\n        value: sponzaUrl,\n      },\n    ],\n    onChange: (value) => {\n      sessionStorage.relativityScene = value;\n      // Reload the browser for simplicity.\n      window.location.reload();\n    },\n  });\n  setValue(getSceneUrl());\n  return containerEl;\n};\n\nexport const initSpeedIndicator = (el: HTMLElement) => {\n  const speedIndicator = document.createElement(\"div\");\n  speedIndicator.classList.add(\"speed-indicator\");\n  el.appendChild(speedIndicator);\n  return speedIndicator;\n};\n\nexport type UiConfig = {\n  el: HTMLElement;\n  onStateChange?: (config: UiState) => void;\n};\n\n/** Element to add the UI to. */\nexport const initUi = ({ el, onStateChange }: UiConfig) => {\n  uiState = getState();\n  const save = () => {\n    saveState();\n    onStateChange && onStateChange(uiState);\n  };\n\n  const slider = createSpeedSlider();\n  slider.addEventListener(\"change\", (e) => {\n    const target = e.target;\n    if (target == null || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n    const currValue = parseFloat(target.value);\n    if (!Number.isNaN(currValue)) {\n      uiState.cameraBeta = currValue;\n      save();\n      onStateChange && onStateChange(getState());\n    }\n  });\n\n  const { toggleLabel: fixedSpeedToggleLabel } = createToggle({\n    attributeName: \"useFixedVelocity\",\n    label: \"Assume fixed camera speed\",\n    save,\n  });\n\n  const { toggleLabel: galileanToggleLabel } = createToggle({\n    attributeName: \"galilean\",\n    label: \"Use Galilean relativity\",\n    save,\n  });\n\n  const { toggleLabel: relativisticBeamingToggleLabel } = createToggle({\n    attributeName: \"relativisticBeaming\",\n    label: \"Relativistic beaming\",\n    save,\n  });\n\n  const { toggleLabel: dopplerEffectToggleLabel } = createToggle({\n    attributeName: \"dopplerEffect\",\n    label: \"Doppler effect\",\n    save,\n  });\n\n  const { toggleLabel: timePulseToggleLabel } = createToggle({\n    attributeName: \"timePulse\",\n    label: \"Show synchronization\",\n    save,\n  });\n\n  const sliderLabel = document.createElement(\"label\");\n  sliderLabel.appendChild(slider);\n  sliderLabel.append(\"Max camera speed (fraction of c)\");\n\n  const simultaneityPicker = createSimultaneityPicker(save);\n  const scenePicker = createScenePicker();\n\n  const uiEl = document.createElement(\"details\");\n  uiEl.className = \"main-ui\";\n  const summaryEl = document.createElement(\"summary\");\n  summaryEl.innerText = \"Help / Settings\";\n  uiEl.appendChild(summaryEl);\n\n  const helptext = document.createElement(\"div\");\n  helptext.innerText = \"Use WASD and mouse to move or touch on smartphone.\";\n  uiEl.appendChild(helptext);\n  uiEl.appendChild(sliderLabel);\n  uiEl.appendChild(relativisticBeamingToggleLabel);\n  uiEl.appendChild(dopplerEffectToggleLabel);\n  uiEl.appendChild(simultaneityPicker);\n  uiEl.appendChild(timePulseToggleLabel);\n  uiEl.appendChild(galileanToggleLabel);\n  uiEl.appendChild(fixedSpeedToggleLabel);\n  uiEl.appendChild(scenePicker);\n  el.appendChild(uiEl);\n};\n","import {\n  Scene,\n  Vector3,\n  Epsilon,\n  UniversalCamera,\n  TargetCamera,\n} from \"@babylonjs/core\";\n\nexport interface RelativisticCamera extends TargetCamera {\n  velocity: Vector3;\n  properVelocity: Vector3;\n  /** Set the max (coordinate) speed. */\n  setMaxSpeed(speed: number | undefined): void;\n}\n\n/**\n * Modifications to the default camera to get smooth acceleration and\n * deceleration. This is necessary to get a smooth velocity.\n *\n * This could probably be replaced with a standard physics integrator.\n */\nclass RelativisticUniversalCamera extends UniversalCamera {\n  velocity: Vector3;\n  properVelocity: Vector3;\n  properAcceleration: Vector3;\n  dt: number;\n\n  maxProperSpeed2: number | undefined;\n  dragCoefficient: number | undefined;\n\n  public setMaxSpeed(speed: number | undefined) {\n    if (speed == null) {\n      this.maxProperSpeed2 = undefined;\n      this.dragCoefficient = 0;\n      return;\n    }\n    this.speed = speed;\n    const maxSpeed2 = speed * speed;\n    const gamma2 = maxSpeed2 < 1 ? 1 / (1 - maxSpeed2) : 10000;\n    this.maxProperSpeed2 = gamma2 * maxSpeed2;\n    this.dragCoefficient = 1 / Math.pow(this.maxProperSpeed2, 1 / 4);\n  }\n\n  constructor(name: string, position: Vector3, scene: Scene) {\n    super(name, position, scene);\n    this.velocity = Vector3.Zero();\n    this.properVelocity = Vector3.Zero();\n    this.properAcceleration = Vector3.Zero();\n    this.dt = 0;\n\n    this.onAfterCheckInputsObservable.add((_camera, _eventState) => {\n      let dt = this.dt;\n      // Apply acceleration with a drag term.\n      this.properAcceleration.copyFrom(this.cameraDirection);\n      const dragCoefficient = this.dragCoefficient ?? 0;\n      // Scaling the drag factor by the sqrt of the velocity is arbitrary\n      // and I just did it because it's cleaner. If you change it then\n      // you also need to change the drag coefficient. If below were\n      // pow(x, 1/3) then above would be `pow(maxProperSpeed, 1/2*1/3).\n      const drag = this.properVelocity\n        .normalizeToNew()\n        .scale(\n          dragCoefficient *\n            this.speed *\n            this.inertia *\n            Math.sqrt(this.properVelocity.length())\n        );\n      this.properAcceleration.subtractInPlace(drag);\n\n      // Euler integration step.\n      this.properVelocity.addInPlace(this.properAcceleration.scale(dt));\n      // Compute the normal velocity from the proper velocity.\n      let properSpeed2 = this.properVelocity.lengthSquared();\n      // If a max speed is set, then we should respect it.\n      if (this.maxProperSpeed2 != null && properSpeed2 > this.maxProperSpeed2) {\n        this.properVelocity\n          .normalize()\n          .scaleInPlace(Math.sqrt(this.maxProperSpeed2));\n        properSpeed2 = this.maxProperSpeed2;\n      }\n      const invGamma = 1 / Math.sqrt(1 + properSpeed2);\n      this.properVelocity.scaleToRef(invGamma, this.velocity);\n      this.position.addInPlace(this.velocity.scale(dt));\n    });\n  }\n\n  public _computeLocalCameraSpeed() {\n    return this.speed;\n  }\n\n  public _checkInputs() {\n    var engine = this.getEngine();\n    // This is taken from the Babylon JS code. Not sure why it's not just\n    // `getDeltaTime`.\n    this.dt = Math.sqrt(engine.getDeltaTime() / (engine.getFps() * 100.0));\n    // Don't allow the timestep to get too large, so clamp it.\n    if (this.dt > 0.1) {\n      this.dt = 0.1;\n    }\n    // Reset the camera direction.\n    this.cameraDirection.setAll(0);\n    // Smoothly stop rotation when rotation is stopped.\n    this.cameraRotation.scaleInPlace(Math.exp(-this.dt) * this.inertia);\n\n    super._checkInputs();\n  }\n\n  /** Don't allow the default position update. */\n  public _updatePosition() {}\n}\n\n/**\n * Not great check, but used to determine if we should use a virtual\n * joystick or wasd keyboard.\n */\nconst runningSmartphone = () => {\n  return (\n    navigator.userAgent.match(/Android/i) ||\n    navigator.userAgent.match(/iPhone/i)\n  );\n};\n\nconst keyForward = 87;\nconst keyBackward = 83;\nconst keyUp = 69;\nconst keyDown = 81;\nconst keyRight = 68;\nconst keyLeft = 65;\n\nconst initCamera = (camera: RelativisticUniversalCamera) => {\n  // Enable WASD keys for camera control.\n  camera.keysDownward.push(keyDown);\n  camera.keysDown.push(keyBackward);\n  camera.keysUpward.push(keyUp);\n  camera.keysUp.push(keyForward);\n  camera.keysLeft.push(keyLeft);\n  camera.keysRight.push(keyRight);\n  camera.gamepadAngularSensibility = 100;\n  if (runningSmartphone()) {\n    camera.inputs.addVirtualJoystick();\n  }\n\n  camera.speed = 1.0;\n  camera.inertia = 0.9;\n  camera.minZ = 0.1;\n  camera.maxZ = 10000;\n  camera.fov = 0.9;\n};\n\nexport const createCamera = (\n  name: string,\n  position: Vector3,\n  scene: Scene\n): RelativisticCamera => {\n  const camera = new RelativisticUniversalCamera(name, position, scene);\n  initCamera(camera);\n  return camera;\n};\n","import { DirectionalLight, ShaderMaterial, Vector3 } from \"@babylonjs/core\";\nimport { RelativisticCamera } from \"./camera\";\nimport { getState, SimultaneityFrame } from \"./ui\";\n\nexport type UniformParams = {\n  int?: Record<string, number>;\n  float?: Record<string, number>;\n  vec3?: Record<string, Vector3>;\n};\n\nconst ticks = () => {\n  return new Date().getTime();\n};\n\nconst start = ticks();\n\nexport const definesFromUiState = () => {\n  const {\n    galilean,\n    simultaneityFrame,\n    useFixedVelocity,\n    useNoTimeDelay,\n    relativisticBeaming,\n    dopplerEffect,\n    timePulse,\n  } = getState();\n  const defines = [\n    galilean ? \"#define GALILEAN\" : \"\",\n    useNoTimeDelay\n      ? simultaneityFrame == SimultaneityFrame.world\n        ? \"#define SIMULTANEITY_FRAME_WORLD\"\n        : \"#define SIMULTANEITY_FRAME_CAMERA\"\n      : \"\",\n    useFixedVelocity ? \"#define FIXED_VELOCITY\" : \"\",\n    useNoTimeDelay ? \"#define NO_TIME_DELAY\" : \"\",\n    relativisticBeaming ? \"#define RELATIVISTIC_BEAMING\" : \"\",\n    dopplerEffect ? \"#define DOPPLER_EFFECT\" : \"\",\n    timePulse ? \"#define TIME_PULSE\" : \"\",\n  ];\n  return defines;\n};\n\n/**\n * Get uniform parameters for shader from UI and camera.\n */\nexport const getUniformParams = (\n  camera: RelativisticCamera,\n  light: DirectionalLight\n) => {\n  const {\n    cameraBeta,\n    galilean,\n    simultaneityFrame,\n    useFixedVelocity,\n    useNoTimeDelay,\n    relativisticBeaming,\n    dopplerEffect,\n    timePulse,\n  } = getState();\n  const velocity =\n    camera.velocity == null || useFixedVelocity\n      ? camera.getDirection(Vector3.Forward()).scale(cameraBeta)\n      : camera.velocity;\n  const speed = velocity.length();\n  const gamma = galilean ? 1 : 1 / Math.sqrt(1 - speed * speed);\n  light.computeTransformedInformation();\n  const lightDir = light.transformedDirection ?? light.direction;\n  lightDir && lightDir.normalize();\n  return {\n    vec3: {\n      velocity,\n      lightDir,\n    },\n    float: {\n      time: (ticks() - start) / 1000,\n      gamma,\n    },\n    int: {\n      useNoTimeDelay: useNoTimeDelay ? 1 : 0,\n      simultaneityFrame,\n      useGalilean: galilean ? 1 : 0,\n      relativisticBeaming: relativisticBeaming ? 1 : 0,\n      dopplerEffect: dopplerEffect ? 1 : 0,\n      timePulse: timePulse ? 1 : 0,\n    },\n  };\n};\n\n/** Convenience function for setting a bunch of uniforms on a shader. */\nexport const setUniforms = (shader: ShaderMaterial, data: UniformParams) => {\n  if (data.int != null) {\n    Object.entries(data.int).forEach(([uniformName, uniformValue]) => {\n      shader.setInt(uniformName, uniformValue);\n    });\n  }\n  if (data.vec3 != null) {\n    Object.entries(data.vec3).forEach(([uniformName, uniformValue]) => {\n      shader.setVector3(uniformName, uniformValue);\n    });\n  }\n  if (data.float != null) {\n    Object.entries(data.float).forEach(([uniformName, uniformValue]) => {\n      shader.setFloat(uniformName, uniformValue);\n    });\n  }\n};\n","import {\n  Scene,\n  BaseTexture,\n  Material,\n  AbstractMesh,\n  PBRMaterial,\n  BackgroundMaterial,\n  ShaderMaterial,\n  InstancedMesh,\n  VertexBuffer\n} from \"@babylonjs/core\";\nimport { UniformParams, setUniforms } from \"./utils\";\n\nexport type ShaderConfig = {\n  scene: Scene;\n  rgbMapTexture: BaseTexture;\n};\n\n/** Initialize the special relativity shaders. */\nexport const initShaders = ({ scene, rgbMapTexture }: ShaderConfig) => {\n  const validMeshes = scene.meshes.filter(\n    (mesh) => !(mesh instanceof InstancedMesh) && mesh.material != null\n  );\n  const materials = validMeshes.map((mesh) => mesh.material);\n  const definesChange = (defines: string[]) => {\n    for (let i = 0; i < materials.length; i++) {\n      const material = materials[i];\n      const mesh = validMeshes[i];\n      updateShaderMaterial(scene, rgbMapTexture, material!, mesh, defines);\n    }\n  };\n  const uniformsChange = (uniforms: UniformParams) => {\n    for (let i = 0; i < materials.length; i++) {\n      const mesh = validMeshes[i];\n      const material = materials[i];\n      const shaderMaterial = mesh.material;\n      if (!(shaderMaterial instanceof ShaderMaterial)) {\n        continue;\n      }\n      setUniforms(shaderMaterial, uniforms);\n      if (material == null) {\n        continue;\n      }\n    }\n  };\n  return {\n    definesChange,\n    uniformsChange,\n  };\n};\n\nconst updateShaderUniforms = (material: Material, shader: ShaderMaterial) => {\n  const uniformParams: UniformParams = {\n    float: {},\n    int: {},\n    vec3: {},\n  };\n  if (material instanceof PBRMaterial) {\n    uniformParams.float![\"metallicFactor\"] = material.metallic ?? 1;\n    uniformParams.float![\"roughnessFactor\"] = material.roughness ?? 1;\n  }\n  setUniforms(shader, uniformParams);\n};\n\nconst updateShaderMaterial = (\n  scene: Scene,\n  rgbMapTexture: BaseTexture,\n  material: Material,\n  mesh: AbstractMesh,\n  userDefines: string[]\n) => {\n  const samplers: Record<string, BaseTexture> = {};\n  const defines = [...userDefines];\n  if (material instanceof PBRMaterial) {\n    // Take the pre-defined samplers.\n    if (material.albedoTexture != null) {\n      samplers[\"albedoSampler\"] = material.albedoTexture;\n      defines.push(\"#define ALBEDO_ENABLED\");\n    }\n    if (material.bumpTexture != null) {\n      samplers[\"bumpSampler\"] = material.bumpTexture;\n      defines.push(\"#define BUMP_ENABLED\");\n      if (mesh.isVerticesDataPresent(VertexBuffer.TangentKind)) {\n        defines.push(\"#define TANGENT\");\n      }\n    }\n    if (material.metallicTexture != null) {\n      samplers[\"metallicRoughnessSampler\"] = material.metallicTexture;\n      defines.push(\"#define METALLIC_ROUGHNESS_ENABLED\");\n    }\n  } else if (material instanceof BackgroundMaterial) {\n    if (material.reflectionTexture != null) {\n      samplers[\"reflectionSampler\"] = material.reflectionTexture;\n    }\n    defines.push(\"#define SKYBOX\");\n  }\n  samplers[\"rgbMapSampler\"] = rgbMapTexture;\n  const shaderMaterial = new ShaderMaterial(\n    \"shader\" + mesh.name,\n    scene,\n    {\n      vertex: \"custom\",\n      fragment: \"custom\",\n    },\n    {\n      attributes: [\"position\", \"normal\", \"tangent\", \"uv\"],\n      uniforms: [\n        \"world\",\n        \"finalWorld\",\n        \"view\",\n        \"projection\",\n        \"velocity\",\n        \"time\",\n        \"lightDir\",\n        \"metallicFactor\",\n        \"roughnessFactor\",\n      ],\n      samplers: Object.keys(samplers),\n      defines,\n    }\n  );\n  Object.entries(samplers).map(([name, texture]) => {\n    shaderMaterial.setTexture(name, texture);\n  });\n  updateShaderUniforms(material, shaderMaterial);\n  // If there's already a shadermaterial, then we delete it.\n  if (mesh.material instanceof ShaderMaterial) {\n    mesh.material.dispose();\n  }\n  mesh.material = shaderMaterial;\n};\n","import {\n  Effect,\n  Engine,\n  SceneLoader,\n  Vector3,\n  Texture,\n  DirectionalLight,\n} from \"@babylonjs/core\";\nimport \"@babylonjs/loaders/glTF/2.0\";\nimport { createCanvas } from \"./canvas-utils\";\nimport { loadText } from \"./load-text\";\nimport { getState, initUi, initSpeedIndicator, getSceneUrl } from \"./ui\";\nimport { createCamera } from \"./camera\";\nimport { initSkybox } from \"./skybox\";\nimport { definesFromUiState, getUniformParams } from \"./utils\";\nimport { initShaders } from \"./shaders\";\n\ntype Config = {\n  el: HTMLElement;\n  sceneFilename: string;\n};\n\nconst main = async ({ el, sceneFilename }: Config) => {\n  const canvas = createCanvas(el);\n\n  const speedIndicator = initSpeedIndicator(el);\n\n  const [vertexSource, fragmentSource] = await Promise.all([\n    loadText(\"main.vert\"),\n    loadText(\"main.frag\"),\n  ]);\n\n  const engine = new Engine(canvas, true);\n\n  Effect.ShadersStore[\"customVertexShader\"] = vertexSource;\n\n  Effect.ShadersStore[\"customFragmentShader\"] = fragmentSource;\n\n  const scene = await SceneLoader.LoadAsync(sceneFilename);\n\n  const directionalLights = (scene.lights || []).filter(\n    (light) => light instanceof DirectionalLight\n  ) as DirectionalLight[];\n  if (directionalLights.length === 0) {\n    const position = new Vector3(3, -5, 4);\n    const light = new DirectionalLight(\"dir-light\", position, scene);\n    light.intensity = 10;\n    directionalLights.push(light);\n  }\n  const light = directionalLights[0];\n\n  // Find default camera in scene and replace it with relativistic camera.\n  const defaultCameraInfo =\n    scene.cameras && scene.cameras.length > 0 ? scene.cameras[0] : undefined;\n  const defaultPosition =\n    defaultCameraInfo?.globalPosition || new Vector3(0, 0, 1);\n  const defaultRotation = defaultCameraInfo?.absoluteRotation;\n  if (defaultCameraInfo != null) {\n    scene.removeCamera(defaultCameraInfo);\n  }\n  const camera = createCamera(\"camera1\", defaultPosition, scene);\n  scene.activeCamera = camera;\n\n  if (defaultRotation != null) {\n    camera.rotationQuaternion = defaultRotation;\n    // This is needed due to virtual joystick not handling\n    // certain rotations correctly.\n    camera.setTarget(camera.getFrontPosition(1));\n  } else {\n    camera.setTarget(Vector3.Zero());\n  }\n  // This attaches the camera to the canvas\n  camera.attachControl(true);\n\n  const rgbMapTexture = new Texture(\n    \"./lambda_rgb_map.png\",\n    scene,\n    false,\n    undefined,\n    Texture.BILINEAR_SAMPLINGMODE\n  );\n\n  // Need to skip this due to movement of vertices from relativistic\n  // corrections.\n  scene.skipFrustumClipping = true;\n  await initSkybox(scene);\n\n  const { definesChange, uniformsChange } = initShaders({\n    scene,\n    rgbMapTexture,\n  });\n\n  initUi({\n    el,\n    onStateChange: () => {\n      definesChange(definesFromUiState());\n    },\n  });\n\n  engine.onBeginFrameObservable.addOnce(() => {\n    // Set relevant defines for the first render.\n    definesChange(definesFromUiState());\n  });\n\n  // Register a render loop to repeatedly render the scene.\n  engine.runRenderLoop(function () {\n    const { cameraBeta } = getState();\n    // Set the maximum allowed speed.\n    camera.setMaxSpeed(cameraBeta);\n    const uniformParams = getUniformParams(camera, light);\n    uniformsChange(uniformParams);\n\n    const speed = uniformParams.vec3.velocity.length();\n    const gamma = uniformParams.float.gamma;\n    // Set the speed indicator in the UI.\n    speedIndicator.innerHTML = [\n      `Speed: ${speed.toFixed(3)}c`,\n      `Gamma: ${gamma.toFixed(3)}`,\n    ].join(\"<br/>\");\n\n    scene.render();\n  });\n\n  // Watch for browser/canvas resize events\n  window.addEventListener(\"resize\", function () {\n    engine.resize();\n  });\n  canvas.focus();\n};\n\nmain({\n  el: document.body,\n  sceneFilename: getSceneUrl(),\n}).catch(console.error);\n","import { Texture, CubeTexture, Scene } from \"@babylonjs/core\";\n\nexport const initSkybox = async (scene: Scene) => {\n  const cubeTexture = new CubeTexture(\"skybox/skybox\", scene, [\n    \"_px.png\",\n    \"_py.png\",\n    \"_pz.png\",\n    \"_nx.png\",\n    \"_ny.png\",\n    \"_nz.png\",\n  ]);\n  cubeTexture.coordinatesMode = Texture.SKYBOX_MODE;\n  scene.createDefaultEnvironment({\n    environmentTexture: cubeTexture,\n    createGround: false,\n    skyboxSize: 1000,\n    groundSize: 1000,\n    skyboxTexture: cubeTexture,\n  });\n};\n"],"sourceRoot":""}